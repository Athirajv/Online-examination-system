{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\OneDrive\\\\Desktop\\\\Examination System\\\\client\\\\src\\\\Completed.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import NavBar from \"./Navbar\";\n\n// import { Link } from \"react-router-dom\";\n\n// function Studentcompleted() {\n//   const [completedExams, setCompletedExams] = useState([]);\n\n//   useEffect(() => {\n\n//     fetch('http://localhost:4002/api/examview/')\n//       .then((res) => res.json())\n//       .then((result) => {\n\n//         const currentDate = new Date();\n\n//         const filteredCompletedExams = result.filter((exam) => {\n//           const examEndDateTime = new Date(`${exam.scheduledDate} ${exam.scheduledendTime}`);\n\n//           return currentDate > examEndDateTime;\n//         });\n\n//         setCompletedExams(filteredCompletedExams);\n//       });\n//   }, []);\n// //   const containerStyle = {\n// //     backgroundImage: `url(img/coffee.webp)`,\n// //     backgroundSize: 'cover',\n// //     backgroundPosition: 'center',\n// //     minHeight: '100vh',\n// // };\n\n//   return (\n//     <>\n//       <NavBar />\n//       {/* <div className=\"container-fluid\" style={containerStyle}> */}\n//       <div className=\"container mt-4\">\n//         <h4 className=\"mb-4 text-center\">Completed Exams</h4>\n//         <table className=\"table table-bordered  table table-hover alert alert-danger\">\n//           <thead>\n//             <tr>\n//               <th>Exam Name</th>\n//               <th>Exam Date</th>\n//               <th>Start Time</th>\n//               <th>End Time</th>\n//               <th>Action</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {completedExams.map((value,exam) => (\n//               <tr key={exam._id}>\n//                 <td>{exam.title}</td>\n//                 <td>{exam.scheduledDate}</td>\n//                 <td>{exam.scheduledstartTime}</td>\n//                 <td>{exam.scheduledendTime}</td>\n//                 {/* <td><button style={{\n//           backgroundColor: '#4CAF50', color: 'white',padding: '8px 16px',borderRadius: '4px',cursor: 'pointer',}}>view</button></td> */}\n//           <td><Link to=\"/previousdisplay\"state={{id:value._id}}  style={{ marginLeft: '150px', marginTop:'80px'}}>View</Link></td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//       {/* </div> */}\n//     </>\n//   );\n// }\n\n// export default Studentcompleted;\n\n// Studentcompleted.js\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from \"./Navbar\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Studentcompleted() {\n  _s();\n  const [completedExams, setCompletedExams] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:4002/api/examview/').then(res => res.json()).then(result => {\n      const currentDate = new Date();\n      const filteredCompletedExams = result.filter(exam => {\n        const examEndDateTime = new Date(`${exam.scheduledDate} ${exam.scheduledendTime}`);\n        return currentDate > examEndDateTime;\n      });\n      setCompletedExams(filteredCompletedExams);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-4 text-center\",\n        children: \"Completed Exams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered table table-hover alert alert-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Exam Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Exam Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Start Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"End Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: completedExams.map(exam => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: exam.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: exam.scheduledDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: exam.scheduledstartTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: exam.scheduledendTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/previousdisplay/${exam._id}`,\n                style: {\n                  marginLeft: '150px',\n                  marginTop: '80px'\n                },\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, exam._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Studentcompleted, \"2z9UJvdh+kRSSu4sL3SsEbZLwww=\");\n_c = Studentcompleted;\nexport default Studentcompleted;\nvar _c;\n$RefreshReg$(_c, \"Studentcompleted\");","map":{"version":3,"names":["React","useState","useEffect","NavBar","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Studentcompleted","_s","completedExams","setCompletedExams","fetch","then","res","json","result","currentDate","Date","filteredCompletedExams","filter","exam","examEndDateTime","scheduledDate","scheduledendTime","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","title","scheduledstartTime","to","_id","style","marginLeft","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/anand/OneDrive/Desktop/Examination System/client/src/Completed.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import NavBar from \"./Navbar\";\r\n\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// function Studentcompleted() {\r\n//   const [completedExams, setCompletedExams] = useState([]);\r\n\r\n//   useEffect(() => {\r\n  \r\n//     fetch('http://localhost:4002/api/examview/')\r\n//       .then((res) => res.json())\r\n//       .then((result) => {\r\n       \r\n//         const currentDate = new Date();\r\n\r\n//         const filteredCompletedExams = result.filter((exam) => {\r\n//           const examEndDateTime = new Date(`${exam.scheduledDate} ${exam.scheduledendTime}`);\r\n\r\n//           return currentDate > examEndDateTime;\r\n//         });\r\n\r\n//         setCompletedExams(filteredCompletedExams);\r\n//       });\r\n//   }, []);\r\n// //   const containerStyle = {\r\n// //     backgroundImage: `url(img/coffee.webp)`,\r\n// //     backgroundSize: 'cover',\r\n// //     backgroundPosition: 'center',\r\n// //     minHeight: '100vh',\r\n// // };\r\n\r\n//   return (\r\n//     <>\r\n//       <NavBar />\r\n//       {/* <div className=\"container-fluid\" style={containerStyle}> */}\r\n//       <div className=\"container mt-4\">\r\n//         <h4 className=\"mb-4 text-center\">Completed Exams</h4>\r\n//         <table className=\"table table-bordered  table table-hover alert alert-danger\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th>Exam Name</th>\r\n//               <th>Exam Date</th>\r\n//               <th>Start Time</th>\r\n//               <th>End Time</th>\r\n//               <th>Action</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {completedExams.map((value,exam) => (\r\n//               <tr key={exam._id}>\r\n//                 <td>{exam.title}</td>\r\n//                 <td>{exam.scheduledDate}</td>\r\n//                 <td>{exam.scheduledstartTime}</td>\r\n//                 <td>{exam.scheduledendTime}</td>\r\n//                 {/* <td><button style={{\r\n//           backgroundColor: '#4CAF50', color: 'white',padding: '8px 16px',borderRadius: '4px',cursor: 'pointer',}}>view</button></td> */}\r\n//           <td><Link to=\"/previousdisplay\"state={{id:value._id}}  style={{ marginLeft: '150px', marginTop:'80px'}}>View</Link></td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//       {/* </div> */}\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Studentcompleted;\r\n\r\n// Studentcompleted.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport NavBar from \"./Navbar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Studentcompleted() {\r\n  const [completedExams, setCompletedExams] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4002/api/examview/')\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const currentDate = new Date();\r\n        const filteredCompletedExams = result.filter((exam) => {\r\n          const examEndDateTime = new Date(`${exam.scheduledDate} ${exam.scheduledendTime}`);\r\n          return currentDate > examEndDateTime;\r\n        });\r\n        setCompletedExams(filteredCompletedExams);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div className=\"container mt-4\">\r\n        <h4 className=\"mb-4 text-center\">Completed Exams</h4>\r\n        <table className=\"table table-bordered table table-hover alert alert-danger\">\r\n          <thead>\r\n            <tr>\r\n              <th>Exam Name</th>\r\n              <th>Exam Date</th>\r\n              <th>Start Time</th>\r\n              <th>End Time</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {completedExams.map((exam) => (\r\n              <tr key={exam._id}>\r\n                <td>{exam.title}</td>\r\n                <td>{exam.scheduledDate}</td>\r\n                <td>{exam.scheduledstartTime}</td>\r\n                <td>{exam.scheduledendTime}</td>\r\n                <td>\r\n                  <Link to={`/previousdisplay/${exam._id}`} style={{ marginLeft: '150px', marginTop: '80px' }}>\r\n                    View\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Studentcompleted;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}