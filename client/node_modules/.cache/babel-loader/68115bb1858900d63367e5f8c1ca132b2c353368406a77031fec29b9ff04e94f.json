{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\OneDrive\\\\Desktop\\\\Examination System\\\\client\\\\src\\\\StudentExam.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import NavBar from \"./Navbar\";\n// import SideBar from \"./Sidebar\";\n// function StudentExam(){\n//     return(\n//         <>\n//         <div className=\"content\">\n//         <NavBar/>\n//         <SideBar/>\n//         </div>\n//         </>\n//     )\n// }\n// export default StudentExam\n\n// import React, { useState, useEffect } from \"react\";\n// import NavBar from \"./Navbar\";\n// import SideBar from \"./Sidebar\";\n\n// const ExamView = () => {\n// const [examData, setExamData] = useState([]);\n// const [scheduleExamData, setScheduleExamData] = useState({\n//   class: \"\",\n//   title: \"\",\n//   scheduledDate: \"\",\n//   scheduledstartTime: \"\",\n//   scheduledendTime: \"\",\n// });\n// const [isScheduling, setIsScheduling] = useState(false);\n\n// useEffect(() => {\n//   // Fetch exam data from the backend\n//   fetch(`http://localhost:4002/api/examview/`)\n//     .then((response) => response.json())\n//     .then((data) => {\n//       setExamData(data);\n//       console.log(\"Fetched Exam Data:\", data);\n//     })\n//     .catch((error) => console.error(\"Error fetching exam data:\", error));\n// }, []);\n\n//   const handleScheduleExam = (index) => {\n//     const selectedExam = examData[index];\n//     setScheduleExamData({\n//       class: selectedExam.class,\n//       title: selectedExam.title,\n//       scheduledDate: \"\",\n//       // scheduledTime: \"\",\n//       scheduledstartTime: \"\",\n//     scheduledendTime: \"\"\n//     });\n//     setIsScheduling(true);\n//   };\n\n//   const handleScheduleSubmit = (e) => {\n//     e.preventDefault();\n\n//     // Implement the logic to send the scheduled exam data to the backend\n//     // ...\n\n//     // Reset form data\n//     setScheduleExamData({\n//       class: \"\",\n//       title: \"\",\n//       scheduledDate: \"\",\n//       // scheduledTime: \"\",\n//       scheduledstartTime: \"\",\n//     scheduledendTime: \"\"\n//     });\n\n//     setIsScheduling(false);\n\n//     // Show alert or confirmation modal\n//     alert(\"Exam scheduled successfully!\");\n//   };\n\n//   return (\n//     <div className=\"content\">\n//       <NavBar />\n//       <SideBar />\n//       <div>\n//         <h1 className=\"text-center\">·¥áx·¥Ä·¥ç ·¥Ö·¥á·¥õ·¥Ä…™ üÍú±</h1>\n//         <table border=\"1\" className=\"table table-hover\">\n//           <thead>\n//             <tr>\n//               <th>Class</th>\n//               <th>Title</th>\n//               <th>Questions</th>\n//               <th>Action</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {examData.map((item, index) => (\n//               <tr key={index}>\n//                 <td>{item.class}</td>\n//                 <td>{item.title}</td>\n//                 <td>\n//                   <button style={{ marginLeft: '20px', borderRadius: '20px' }}> üëÅÔ∏è‚Äçüó®Ô∏è</button>\n//                 </td>\n//                 <td>\n//                   <button className=\"btn btn-info m-2\" onClick={() => handleScheduleExam(index)}>\n//                     Schedule Exam\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n\n//         {isScheduling && (\n//           // <div>\n//           //   <h2>SCHEDULE EXAM</h2>\n//           //   <form onSubmit={handleScheduleSubmit}>\n//           //     <div>\n//           //       <label>Class:</label>\n//           //       <input type=\"text\" value={scheduleExamData.class} disabled />\n//           //     </div>\n//           //     <div>\n//           //       <label>Title:</label>\n//           //       <input type=\"text\" value={scheduleExamData.title} disabled />\n//           //     </div>\n//           //     <div>\n//           //       <label>Scheduled Date:</label>\n//           //       <input\n//           //         type=\"date\"\n//           //         value={scheduleExamData.scheduledDate}\n//           //         onChange={(e) => setScheduleExamData({ ...scheduleExamData, scheduledDate: e.target.value })}\n//           //         required\n//           //       />\n//           //     </div>\n//           //     <div>\n//           //       <label>Scheduled Time:</label>\n//           //       <input\n//           //         type=\"time\"\n//           //         value={scheduleExamData.scheduledTime}\n//           //         onChange={(e) => setScheduleExamData({ ...scheduleExamData, scheduledTime: e.target.value })}\n//           //         required\n//           //       />\n//           //     </div>\n//           //     <button type=\"submit\">Schedule</button>\n//           //   </form>\n//           // </div>\n//           <div>\n//   <h2 className=\"text-center mb-4\">SCHEDULE EXAM</h2>\n//   <form onSubmit={handleScheduleSubmit}>\n//     {/* <div className=\"form-group\">\n//       <label>Class:</label>\n//       <input type=\"text\" value={scheduleExamData.class} className=\"form-control\" disabled />\n//     </div>\n//     <div className=\"form-group\">\n//       <label>Title:</label>\n//       <input type=\"text\" value={scheduleExamData.title} className=\"form-control\" disabled />\n//     </div> */}\n//     <div className=\"form-group\">\n//       <label>Scheduled Date:</label>\n//       <input\n//         type=\"date\"\n//         value={scheduleExamData.scheduledDate}\n//         onChange={(e) => setScheduleExamData({ ...scheduleExamData, scheduledDate: e.target.value })}\n//         className=\"form-control\"\n//         required\n//       />\n//     </div>\n//     <div className=\"form-group\">\n//       <label>Start Time:</label>\n//       <input\n//         type=\"time\"\n//         value={scheduleExamData.scheduledTime}\n//         onChange={(e) => setScheduleExamData({ ...scheduleExamData, scheduledTime: e.target.value })}\n//         className=\"form-control\"\n//         required\n//       />\n//     </div>\n//     <div className=\"form-group\">\n//       <label>End Time:</label>\n//       <input\n//         type=\"time\"\n//         value={scheduleExamData.scheduledTime}\n//         onChange={(e) => setScheduleExamData({ ...scheduleExamData, scheduledTime: e.target.value })}\n//         className=\"form-control\"\n//         required\n//       />\n//     </div>\n//     <button type=\"submit\" className=\"btn btn-primary\">Schedule</button>\n//   </form>\n// </div>\n\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ExamView;\n\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from \"./Navbar\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StudentExam = () => {\n  _s();\n  const [examData, setExamData] = useState([]);\n  const [scheduleExamData, setScheduleExamData] = useState({\n    class: \"\",\n    title: \"\",\n    scheduledDate: \"\",\n    scheduledstartTime: \"\",\n    scheduledendTime: \"\"\n  });\n  const [isScheduling, setIsScheduling] = useState(false);\n  const [selectedExam, setSelectedExam] = useState(null);\n  const navigate = useNavigate();\n  // console.log(examData)\n  useEffect(() => {\n    // Fetch exam data from the backend\n    fetch(`http://localhost:4002/api/examview/`).then(response => response.json()).then(data => {\n      setExamData(data);\n      console.log(\"Fetched Exam Data:\", data);\n    }).catch(error => console.error(\"Error fetching exam data:\", error));\n  }, []);\n  const handleScheduleExam = index => {\n    const selectedExam = examData[index];\n    setSelectedExam(selectedExam);\n    setScheduleExamData({\n      class: selectedExam.class,\n      title: selectedExam.title,\n      scheduledDate: \"\",\n      scheduledstartTime: \"\",\n      scheduledendTime: \"\"\n    });\n    setIsScheduling(true);\n    navigate('/examtest');\n  };\n  const handleScheduleSubmit = e => {\n    e.preventDefault();\n    const {\n      class: examClass,\n      title,\n      scheduledDate,\n      scheduledstartTime,\n      scheduledendTime\n    } = scheduleExamData;\n\n    // Send the scheduled exam data to the backend\n    fetch(`http://localhost:4002/api/scheduleexam/${selectedExam._id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        scheduledDate,\n        scheduledstartTime,\n        scheduledendTime\n      })\n    }).then(response => response.json()).then(data => {\n      alert(data.message);\n    }).catch(error => console.error(\"Error scheduling exam:\", error));\n\n    // Reset form data\n    setScheduleExamData({\n      class: \"\",\n      title: \"\",\n      scheduledDate: \"\",\n      scheduledstartTime: \"\",\n      scheduledendTime: \"\"\n    });\n    setIsScheduling(false);\n  };\n  return (\n    /*#__PURE__*/\n    // <div className=\"content\">\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"\\u1D07x\\u1D00\\u1D0D \\u1D05\\u1D07\\u1D1B\\u1D00\\u026A\\u029F\\uA731\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          className: \"table table-hover\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Class\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Questions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Start Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"End time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: examData.map((item, index) => ( /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.class\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    marginLeft: '20px',\n                    borderRadius: '20px'\n                  },\n                  children: \" \\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.scheduledDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.scheduledstartTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/examtest\",\n                  state: {\n                    id: item._id\n                  },\n                  style: {\n                    marginLeft: '150px',\n                    border: '2px solid',\n                    borderRadius: '20px',\n                    marginTop: '80px',\n                    padding: '8px'\n                  },\n                  children: \"start\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger m-2\",\n                  onClick: () => handleScheduleExam(index),\n                  children: \"STOP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), console.log(item)))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n};\n_s(StudentExam, \"UhYeoCnnUMiuBCXG6U/wdiYjDr0=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentExam;\nexport default StudentExam;\nvar _c;\n$RefreshReg$(_c, \"StudentExam\");","map":{"version":3,"names":["React","useState","useEffect","NavBar","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentExam","_s","examData","setExamData","scheduleExamData","setScheduleExamData","class","title","scheduledDate","scheduledstartTime","scheduledendTime","isScheduling","setIsScheduling","selectedExam","setSelectedExam","navigate","fetch","then","response","json","data","console","log","catch","error","handleScheduleExam","index","handleScheduleSubmit","e","preventDefault","examClass","_id","method","headers","body","JSON","stringify","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","border","map","item","style","marginLeft","borderRadius","to","state","id","marginTop","padding","onClick","_c","$RefreshReg$"],"sources":["C:/Users/anand/OneDrive/Desktop/Examination System/client/src/StudentExam.js"],"sourcesContent":["// import React from \"react\";\r\n// import NavBar from \"./Navbar\";\r\n// import SideBar from \"./Sidebar\";\r\n// function StudentExam(){\r\n//     return(\r\n//         <>\r\n//         <div className=\"content\">\r\n//         <NavBar/>\r\n//         <SideBar/>\r\n//         </div>\r\n//         </>\r\n//     )\r\n// }\r\n// export default StudentExam\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import NavBar from \"./Navbar\";\r\n// import SideBar from \"./Sidebar\";\r\n\r\n// const ExamView = () => {\r\n  // const [examData, setExamData] = useState([]);\r\n  // const [scheduleExamData, setScheduleExamData] = useState({\r\n  //   class: \"\",\r\n  //   title: \"\",\r\n  //   scheduledDate: \"\",\r\n  //   scheduledstartTime: \"\",\r\n  //   scheduledendTime: \"\",\r\n  // });\r\n  // const [isScheduling, setIsScheduling] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   // Fetch exam data from the backend\r\n  //   fetch(`http://localhost:4002/api/examview/`)\r\n  //     .then((response) => response.json())\r\n  //     .then((data) => {\r\n  //       setExamData(data);\r\n  //       console.log(\"Fetched Exam Data:\", data);\r\n  //     })\r\n  //     .catch((error) => console.error(\"Error fetching exam data:\", error));\r\n  // }, []);\r\n\r\n//   const handleScheduleExam = (index) => {\r\n//     const selectedExam = examData[index];\r\n//     setScheduleExamData({\r\n//       class: selectedExam.class,\r\n//       title: selectedExam.title,\r\n//       scheduledDate: \"\",\r\n//       // scheduledTime: \"\",\r\n//       scheduledstartTime: \"\",\r\n//     scheduledendTime: \"\"\r\n//     });\r\n//     setIsScheduling(true);\r\n//   };\r\n\r\n//   const handleScheduleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Implement the logic to send the scheduled exam data to the backend\r\n//     // ...\r\n\r\n//     // Reset form data\r\n//     setScheduleExamData({\r\n//       class: \"\",\r\n//       title: \"\",\r\n//       scheduledDate: \"\",\r\n//       // scheduledTime: \"\",\r\n//       scheduledstartTime: \"\",\r\n//     scheduledendTime: \"\"\r\n//     });\r\n\r\n//     setIsScheduling(false);\r\n\r\n//     // Show alert or confirmation modal\r\n//     alert(\"Exam scheduled successfully!\");\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"content\">\r\n//       <NavBar />\r\n//       <SideBar />\r\n//       <div>\r\n//         <h1 className=\"text-center\">·¥áx·¥Ä·¥ç ·¥Ö·¥á·¥õ·¥Ä…™ üÍú±</h1>\r\n//         <table border=\"1\" className=\"table table-hover\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th>Class</th>\r\n//               <th>Title</th>\r\n//               <th>Questions</th>\r\n//               <th>Action</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {examData.map((item, index) => (\r\n//               <tr key={index}>\r\n//                 <td>{item.class}</td>\r\n//                 <td>{item.title}</td>\r\n//                 <td>\r\n//                   <button style={{ marginLeft: '20px', borderRadius: '20px' }}> üëÅÔ∏è‚Äçüó®Ô∏è</button>\r\n//                 </td>\r\n//                 <td>\r\n//                   <button className=\"btn btn-info m-2\" onClick={() => handleScheduleExam(index)}>\r\n//                     Schedule Exam\r\n//                   </button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n\r\n//         {isScheduling && (\r\n//           // <div>\r\n//           //   <h2>SCHEDULE EXAM</h2>\r\n//           //   <form onSubmit={handleScheduleSubmit}>\r\n//           //     <div>\r\n//           //       <label>Class:</label>\r\n//           //       <input type=\"text\" value={scheduleExamData.class} disabled />\r\n//           //     </div>\r\n//           //     <div>\r\n//           //       <label>Title:</label>\r\n//           //       <input type=\"text\" value={scheduleExamData.title} disabled />\r\n//           //     </div>\r\n//           //     <div>\r\n//           //       <label>Scheduled Date:</label>\r\n//           //       <input\r\n//           //         type=\"date\"\r\n//           //         value={scheduleExamData.scheduledDate}\r\n//           //         onChange={(e) => setScheduleExamData({ ...scheduleExamData, scheduledDate: e.target.value })}\r\n//           //         required\r\n//           //       />\r\n//           //     </div>\r\n//           //     <div>\r\n//           //       <label>Scheduled Time:</label>\r\n//           //       <input\r\n//           //         type=\"time\"\r\n//           //         value={scheduleExamData.scheduledTime}\r\n//           //         onChange={(e) => setScheduleExamData({ ...scheduleExamData, scheduledTime: e.target.value })}\r\n//           //         required\r\n//           //       />\r\n//           //     </div>\r\n//           //     <button type=\"submit\">Schedule</button>\r\n//           //   </form>\r\n//           // </div>\r\n//           <div>\r\n//   <h2 className=\"text-center mb-4\">SCHEDULE EXAM</h2>\r\n//   <form onSubmit={handleScheduleSubmit}>\r\n//     {/* <div className=\"form-group\">\r\n//       <label>Class:</label>\r\n//       <input type=\"text\" value={scheduleExamData.class} className=\"form-control\" disabled />\r\n//     </div>\r\n//     <div className=\"form-group\">\r\n//       <label>Title:</label>\r\n//       <input type=\"text\" value={scheduleExamData.title} className=\"form-control\" disabled />\r\n//     </div> */}\r\n//     <div className=\"form-group\">\r\n//       <label>Scheduled Date:</label>\r\n//       <input\r\n//         type=\"date\"\r\n//         value={scheduleExamData.scheduledDate}\r\n//         onChange={(e) => setScheduleExamData({ ...scheduleExamData, scheduledDate: e.target.value })}\r\n//         className=\"form-control\"\r\n//         required\r\n//       />\r\n//     </div>\r\n//     <div className=\"form-group\">\r\n//       <label>Start Time:</label>\r\n//       <input\r\n//         type=\"time\"\r\n//         value={scheduleExamData.scheduledTime}\r\n//         onChange={(e) => setScheduleExamData({ ...scheduleExamData, scheduledTime: e.target.value })}\r\n//         className=\"form-control\"\r\n//         required\r\n//       />\r\n//     </div>\r\n//     <div className=\"form-group\">\r\n//       <label>End Time:</label>\r\n//       <input\r\n//         type=\"time\"\r\n//         value={scheduleExamData.scheduledTime}\r\n//         onChange={(e) => setScheduleExamData({ ...scheduleExamData, scheduledTime: e.target.value })}\r\n//         className=\"form-control\"\r\n//         required\r\n//       />\r\n//     </div>\r\n//     <button type=\"submit\" className=\"btn btn-primary\">Schedule</button>\r\n//   </form>\r\n// </div>\r\n\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ExamView;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport NavBar from \"./Navbar\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst StudentExam = () => {\r\n  const [examData, setExamData] = useState([]);\r\n  const [scheduleExamData, setScheduleExamData] = useState({\r\n    class: \"\",\r\n    title: \"\",\r\n    scheduledDate: \"\",\r\n    scheduledstartTime: \"\",\r\n    scheduledendTime: \"\",\r\n  });\r\n  const [isScheduling, setIsScheduling] = useState(false);\r\n  const [selectedExam, setSelectedExam] = useState(null);\r\n  const navigate = useNavigate()\r\n// console.log(examData)\r\n  useEffect(() => {\r\n    // Fetch exam data from the backend\r\n    fetch(`http://localhost:4002/api/examview/`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setExamData(data);\r\n        console.log(\"Fetched Exam Data:\", data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching exam data:\", error));\r\n  }, []);\r\n\r\n  const handleScheduleExam = (index) => {\r\n    const selectedExam = examData[index];\r\n    setSelectedExam(selectedExam);\r\n    setScheduleExamData({\r\n      class: selectedExam.class,\r\n      title: selectedExam.title,\r\n      scheduledDate: \"\",\r\n      scheduledstartTime: \"\",\r\n      scheduledendTime: \"\",\r\n    });\r\n    setIsScheduling(true);\r\n    navigate('/examtest')\r\n  };\r\n\r\n  const handleScheduleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { class: examClass, title, scheduledDate, scheduledstartTime, scheduledendTime } = scheduleExamData;\r\n\r\n    // Send the scheduled exam data to the backend\r\n    fetch(`http://localhost:4002/api/scheduleexam/${selectedExam._id}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        scheduledDate,\r\n        scheduledstartTime,\r\n        scheduledendTime,\r\n      }),\r\n    })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      alert(data.message);\r\n    })\r\n    .catch((error) => console.error(\"Error scheduling exam:\", error));\r\n\r\n    // Reset form data\r\n    setScheduleExamData({\r\n      class: \"\",\r\n      title: \"\",\r\n      scheduledDate: \"\",\r\n      scheduledstartTime: \"\",\r\n      scheduledendTime: \"\",\r\n    });\r\n\r\n    setIsScheduling(false);\r\n  };\r\n\r\n  return (\r\n    // <div className=\"content\">\r\n    <>\r\n      <NavBar />\r\n      \r\n      <div>\r\n        <h1 className=\"text-center\">·¥áx·¥Ä·¥ç ·¥Ö·¥á·¥õ·¥Ä…™ üÍú±</h1>\r\n        <table border=\"1\" className=\"table table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>Class</th>\r\n              <th>Title</th>\r\n              <th>Questions</th>\r\n              <th>Date</th>\r\n              <th>Start Time</th>\r\n              <th>End time</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n            {examData.map((item, index) => (\r\n              \r\n              <tr key={index}>\r\n                <td>{item.class}</td>\r\n                <td>{item.title}</td>\r\n                \r\n                <td>\r\n                  <button style={{ marginLeft: '20px', borderRadius: '20px' }}> üëÅÔ∏è‚Äçüó®Ô∏è</button>\r\n                </td>\r\n                <td>{item.scheduledDate}</td>\r\n                <td>{item.scheduledstartTime}</td>\r\n                {/* <td>{item.scheduledendTime}</td> */}\r\n                \r\n                <td>\r\n                  {/* <button className=\"btn btn-success m-2\" onClick={() => handleScheduleExam(index)}>\r\n                    START\r\n                  </button> */}\r\n                  <Link to=\"/examtest\" state={{id:item._id}} style={{ marginLeft: '150px',border:'2px solid',borderRadius:'20px', marginTop:'80px',padding:'8px'}}>start</Link>\r\n                  <button className=\"btn btn-danger m-2\" onClick={() => handleScheduleExam(index)}>\r\n                    STOP\r\n                  </button>\r\n                </td>\r\n              </tr>,\r\n              console.log(item)\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n          </div>\r\n        \r\n      {/* </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentExam;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGrD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}