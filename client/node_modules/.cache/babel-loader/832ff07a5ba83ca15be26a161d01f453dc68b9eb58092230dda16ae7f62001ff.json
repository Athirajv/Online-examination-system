{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\OneDrive\\\\Desktop\\\\Examination System\\\\client\\\\src\\\\Upcoming.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import NavBar from \"./Navbar\";\n\n// function Studentupcoming() {\n//   const [upcomingExams, setUpcomingExams] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch all exams data from your API or data source\n//     // Replace the following with your actual endpoint or data fetching logic\n//     fetch('http://localhost:4002/api/examview/')\n//       .then((res) => res.json())\n//       .then((result) => {\n//         // Filter upcoming exams based on current date and time\n//         const currentDate = new Date();\n\n//         const filteredUpcomingExams = result.filter((exam) => {\n//           const examStartDateTime = new Date(`${exam.scheduledDate} ${exam.scheduledstartTime}`);\n\n//           return currentDate < examStartDateTime;\n//         });\n\n//         setUpcomingExams(filteredUpcomingExams);\n//       });\n//   }, []);\n\n//   return (\n//     <>\n//       <NavBar />\n//       <div className=\"container mt-4\">\n//         <h4 className=\"mb-4 text-center\">Upcoming Exams</h4>\n//         <table className=\"table table-bordered table table-hover\">\n//           <thead>\n//             <tr>\n//               <th>Exam Name</th>\n//               <th>Exam Date</th>\n//               <th>Start Time</th>\n//               <th>End Time</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {upcomingExams.map((exam) => (\n//               <tr key={exam._id}>\n//                 <td>{exam.title}</td>\n//                 <td>{exam.scheduledDate}</td>\n//                 <td>{exam.scheduledstartTime}</td>\n//                 <td>{exam.scheduledendTime}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default Studentupcoming;\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction StudentUpcoming() {\n  _s();\n  const [upcomingExams, setUpcomingExams] = useState([]);\n  const [noActiveExams, setNoActiveExams] = useState(false);\n  useEffect(() => {\n    fetch('http://localhost:4002/api/examview/').then(res => res.json()).then(result => {\n      const currentDate = new Date();\n      const filteredUpcomingExams = result.filter(exam => {\n        const examStartDateTime = new Date(`${exam.scheduledDate} ${exam.scheduledstartTime}`);\n        return currentDate < examStartDateTime;\n      });\n      setUpcomingExams(filteredUpcomingExams);\n      setNoActiveExams(filteredUpcomingExams.length === 0);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-4 text-center\",\n        children: \"Upcoming Exams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), noActiveExams ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"alert alert-danger\",\n          role: \"alert\",\n          children: \"No upcomexams at the moment.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered table table-hover\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Exam Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Exam Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Start Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"End Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: upcomingExams.map(exam => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: exam.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: exam.scheduledDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: exam.scheduledstartTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: exam.scheduledendTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this)]\n          }, exam._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(StudentUpcoming, \"DbTaqe4TcYsfLoeIxFERc8fqQHo=\");\n_c = StudentUpcoming;\nexport default StudentUpcoming;\nvar _c;\n$RefreshReg$(_c, \"StudentUpcoming\");","map":{"version":3,"names":["React","useState","useEffect","NavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentUpcoming","_s","upcomingExams","setUpcomingExams","noActiveExams","setNoActiveExams","fetch","then","res","json","result","currentDate","Date","filteredUpcomingExams","filter","exam","examStartDateTime","scheduledDate","scheduledstartTime","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","class","role","map","title","scheduledendTime","_id","_c","$RefreshReg$"],"sources":["C:/Users/anand/OneDrive/Desktop/Examination System/client/src/Upcoming.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import NavBar from \"./Navbar\";\r\n\r\n// function Studentupcoming() {\r\n//   const [upcomingExams, setUpcomingExams] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch all exams data from your API or data source\r\n//     // Replace the following with your actual endpoint or data fetching logic\r\n//     fetch('http://localhost:4002/api/examview/')\r\n//       .then((res) => res.json())\r\n//       .then((result) => {\r\n//         // Filter upcoming exams based on current date and time\r\n//         const currentDate = new Date();\r\n\r\n//         const filteredUpcomingExams = result.filter((exam) => {\r\n//           const examStartDateTime = new Date(`${exam.scheduledDate} ${exam.scheduledstartTime}`);\r\n\r\n//           return currentDate < examStartDateTime;\r\n//         });\r\n\r\n//         setUpcomingExams(filteredUpcomingExams);\r\n//       });\r\n//   }, []);\r\n\r\n//   return (\r\n//     <>\r\n//       <NavBar />\r\n//       <div className=\"container mt-4\">\r\n//         <h4 className=\"mb-4 text-center\">Upcoming Exams</h4>\r\n//         <table className=\"table table-bordered table table-hover\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th>Exam Name</th>\r\n//               <th>Exam Date</th>\r\n//               <th>Start Time</th>\r\n//               <th>End Time</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {upcomingExams.map((exam) => (\r\n//               <tr key={exam._id}>\r\n//                 <td>{exam.title}</td>\r\n//                 <td>{exam.scheduledDate}</td>\r\n//                 <td>{exam.scheduledstartTime}</td>\r\n//                 <td>{exam.scheduledendTime}</td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Studentupcoming;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport NavBar from \"./Navbar\";\r\n\r\nfunction StudentUpcoming() {\r\n  const [upcomingExams, setUpcomingExams] = useState([]);\r\n  const [noActiveExams, setNoActiveExams] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4002/api/examview/')\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const currentDate = new Date();\r\n        const filteredUpcomingExams = result.filter((exam) => {\r\n          const examStartDateTime = new Date(`${exam.scheduledDate} ${exam.scheduledstartTime}`);\r\n          return currentDate < examStartDateTime;\r\n        });\r\n\r\n        setUpcomingExams(filteredUpcomingExams);\r\n        setNoActiveExams(filteredUpcomingExams.length === 0);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div className=\"container mt-4\">\r\n        <h4 className=\"mb-4 text-center\">Upcoming Exams</h4>\r\n        {noActiveExams ? (\r\n          <p className=\"text-center\"> <div class=\"alert alert-danger\" role=\"alert\">\r\n          No upcomexams at the moment.\r\n           </div></p>\r\n      \r\n        ) : (\r\n          <table className=\"table table-bordered table table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th>Exam Name</th>\r\n                <th>Exam Date</th>\r\n                <th>Start Time</th>\r\n                <th>End Time</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {upcomingExams.map((exam) => (\r\n                <tr key={exam._id}>\r\n                  <td>{exam.title}</td>\r\n                  <td>{exam.scheduledDate}</td>\r\n                  <td>{exam.scheduledstartTime}</td>\r\n                  <td>{exam.scheduledendTime}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default StudentUpcoming;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}