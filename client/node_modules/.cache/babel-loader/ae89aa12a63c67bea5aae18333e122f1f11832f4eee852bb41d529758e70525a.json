{"ast":null,"code":"\n\n// import React, { useState } from \"react\";\n// import SideBar from \"./Sidebar\";\n// import NavBar from \"./Navbar\";\n// import { Link } from \"react-router-dom\";\n\n// const AddExam = () => {\n//   const [questions, setQuestions] = useState([]);\n//   const [questionCounter, setQuestionCounter] = useState(1);\n//   const [examDetails, setExamDetails] = useState({\n//     title: \"\",\n//     class: \"\",\n//   });\n\n//   const handleInputChange = (e) => {\n//     setExamDetails({\n//       ...examDetails,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const data = {\n//       ...examDetails,\n//       questions: questions.map((question) => document.getElementById(`question${question.id}`).value),\n//     };\n\n//     try {\n\n//       const response = await fetch(\"http://localhost:4002/api/exams\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(data),\n//       });\n\n//       if (response.ok) {\n//         console.log(\"Exam created successfully\");\n\n//       } else {\n//         console.error(\"Failed to create exam\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//     }\n//   };\n\n//   const handleAddQuestion = () => {\n//     setQuestions([...questions, { id: questionCounter }]);\n//     setQuestionCounter(questionCounter + 1);\n//   };\n\n//   return (\n//     <>\n//       <div className=\"content\">\n//         <SideBar />\n//         <NavBar />\n//         <div style={{ display: 'flex', flexDirection: 'column', marginLeft: '300px', alignItems: 'center', justifyContent: 'center', minHeight: '100vh', padding: '20px' }}>\n//           <div className=\"container-fluid pt-4 px-4 \">\n//             <div className=\"row g-4 \">\n//               <div className=\"col-sm-12 col-xl-6 alert alert-primary\">\n//                 <div className=\"bg-light rounded h-100 p-4\">\n//                   <h4 className=\"mb-4 text-center\">Exam Details</h4>\n//                   <form onSubmit={handleSubmit}>\n//                     <div className=\"mb-3\">\n//                       <label htmlFor=\"title\" className=\"form-label\">Title:</label>\n//                       <input\n//                         type=\"text\"\n//                         name=\"title\"\n//                         className=\"form-control\"\n//                         id=\"title\"\n//                         aria-describedby=\"titleHelp\"\n//                         onChange={handleInputChange}\n//                       />\n//                     </div>\n//                     <div className=\"mb-3\">\n//                       <label htmlFor=\"class\" className=\"form-label\">Class:</label>\n//                       <input\n//                         type=\"text\"\n//                         name=\"class\"\n//                         className=\"form-control\"\n//                         id=\"class\"\n//                         aria-describedby=\"classHelp\"\n//                         onChange={handleInputChange}\n//                       />\n//                     </div>\n//                     {questions.map((question) => (\n//                       <div key={question.id} className=\"mb-3\">\n//                         <label htmlFor={`question${question.id}`} className=\"form-label\">Question {question.id}:</label>\n//                         <input\n//                           type=\"text\"\n//                           name={`question${question.id}`}\n//                           className=\"form-control\"\n//                           id={`question${question.id}`}\n//                           aria-describedby=\"questionHelp\"\n//                         />\n//                       </div>\n//                     ))}\n//                     <button type=\"button\" className=\"btn btn-dark\" onClick={handleAddQuestion}>+ Add Question</button>\n//                     <button type=\"submit\" className=\"btn btn-primary\" style={{ marginLeft: \"30px\" }}>Create</button>\n//                     <Link to=\"/examview\"  >view</Link>\n//                   </form>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default AddExam;","map":{"version":3,"names":[],"sources":["C:/Users/anand/OneDrive/Desktop/Examination System/client/src/ExamDetails.js"],"sourcesContent":["\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import SideBar from \"./Sidebar\";\r\n// import NavBar from \"./Navbar\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// const AddExam = () => {\r\n//   const [questions, setQuestions] = useState([]);\r\n//   const [questionCounter, setQuestionCounter] = useState(1);\r\n//   const [examDetails, setExamDetails] = useState({\r\n//     title: \"\",\r\n//     class: \"\",\r\n//   });\r\n\r\n//   const handleInputChange = (e) => {\r\n//     setExamDetails({\r\n//       ...examDetails,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n    \r\n//     const data = {\r\n//       ...examDetails,\r\n//       questions: questions.map((question) => document.getElementById(`question${question.id}`).value),\r\n//     };\r\n\r\n//     try {\r\n     \r\n//       const response = await fetch(\"http://localhost:4002/api/exams\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify(data),\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         console.log(\"Exam created successfully\");\r\n        \r\n//       } else {\r\n//         console.error(\"Failed to create exam\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleAddQuestion = () => {\r\n//     setQuestions([...questions, { id: questionCounter }]);\r\n//     setQuestionCounter(questionCounter + 1);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"content\">\r\n//         <SideBar />\r\n//         <NavBar />\r\n//         <div style={{ display: 'flex', flexDirection: 'column', marginLeft: '300px', alignItems: 'center', justifyContent: 'center', minHeight: '100vh', padding: '20px' }}>\r\n//           <div className=\"container-fluid pt-4 px-4 \">\r\n//             <div className=\"row g-4 \">\r\n//               <div className=\"col-sm-12 col-xl-6 alert alert-primary\">\r\n//                 <div className=\"bg-light rounded h-100 p-4\">\r\n//                   <h4 className=\"mb-4 text-center\">Exam Details</h4>\r\n//                   <form onSubmit={handleSubmit}>\r\n//                     <div className=\"mb-3\">\r\n//                       <label htmlFor=\"title\" className=\"form-label\">Title:</label>\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         name=\"title\"\r\n//                         className=\"form-control\"\r\n//                         id=\"title\"\r\n//                         aria-describedby=\"titleHelp\"\r\n//                         onChange={handleInputChange}\r\n//                       />\r\n//                     </div>\r\n//                     <div className=\"mb-3\">\r\n//                       <label htmlFor=\"class\" className=\"form-label\">Class:</label>\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         name=\"class\"\r\n//                         className=\"form-control\"\r\n//                         id=\"class\"\r\n//                         aria-describedby=\"classHelp\"\r\n//                         onChange={handleInputChange}\r\n//                       />\r\n//                     </div>\r\n//                     {questions.map((question) => (\r\n//                       <div key={question.id} className=\"mb-3\">\r\n//                         <label htmlFor={`question${question.id}`} className=\"form-label\">Question {question.id}:</label>\r\n//                         <input\r\n//                           type=\"text\"\r\n//                           name={`question${question.id}`}\r\n//                           className=\"form-control\"\r\n//                           id={`question${question.id}`}\r\n//                           aria-describedby=\"questionHelp\"\r\n//                         />\r\n//                       </div>\r\n//                     ))}\r\n//                     <button type=\"button\" className=\"btn btn-dark\" onClick={handleAddQuestion}>+ Add Question</button>\r\n//                     <button type=\"submit\" className=\"btn btn-primary\" style={{ marginLeft: \"30px\" }}>Create</button>\r\n//                     <Link to=\"/examview\"  >view</Link>\r\n//                   </form>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default AddExam;\r\n\r\n"],"mappings":";;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}