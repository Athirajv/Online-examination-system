{"ast":null,"code":"// // import React,{useState,useEffect} from \"react\";\n// // import { useLocation } from \"react-router-dom\";\n// // import NavBar from \"./Navbar\";\n// // function ExamTest(){\n\n// //     // const[title,setTitle]=useState('')\n// //     const [examData, setExamData] = useState([]);\n// //     const [title,setTitle]=useState('')\n// //     const [classs,setClasss]=useState('')\n// //     const [question,setQuestion]=useState('')\n// //     const [isScheduling, setIsScheduling] = useState(false);\n// //     const [selectedExam, setSelectedExam] = useState(null);\n// //   const location=useLocation()\n// //   // console.log(location.state.examId\n// //     // )\n// //     useEffect(() => {\n// //       // Fetch exam data from the backend\n// //       fetch(`http://localhost:4002/api/examview/`)\n// //         .then((response) => response.json())\n// //         .then((data) => {\n// //           setExamData(data);\n// //           // console.log(\"Fetched Exam Data:\", data);\n// //         })\n// //         .catch((error) => console.error(\"Error fetching exam data:\", error));\n// //     }, []);\n\n// //   useEffect(()=>{\n// //     let params = {\n// //         id:location.state.examId\n// //     }\n// //     fetch('http://localhost:4002/examtest',{\n// //         method:'post',\n// //         headers:{\n// //             Accept:'application/json',\n// //             'Content-Type':'application/json'\n// //         },\n// //         body:JSON.stringify(params)\n// //     }).then((res)=>res.json()).then((result)=>{\n// //       console.log(result,\"hii\")\n// //       setTitle(result.title)\n// //       setClasss(result.class)\n// //       setQuestion(result.questions)\n\n// //     })\n\n// //   },[])\n\n// //     return(\n// //         <>\n// //        <NavBar/>\n// //        <form action=\"\" method=\"post\" >\n// //                 <div className=\"mb-3\">\n// //                   <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Title</label>\n// //                   <input type=\"text\"  name='title'className=\"form-control\" value={title} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"  disabled/>\n// //                 </div>\n// //                 <div className=\"mb-3\">\n// //                   <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Class</label>\n// //                   <input type=\"text\"  name='class'className=\"form-control\" value={classs} disabledid=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n// //                 </div>\n// //                 <div className=\"mb-3\">\n// //                   <label htmlFor=\"exampleInputEmail1\"className=\"form-control\" >Questions <input type=\"text\"  name='questions'className=\"form-control\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" /></label>\n// //                   <input type=\"text\"  name='questions'className=\"form-control\"value={question}  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n\n// //                 </div>\n\n// //                 </form>\n// //         </>\n// //     )\n// // }\n// // export  default ExamTest\n\n// import React, { useState, useEffect } from \"react\";\n// import { useLocation } from \"react-router-dom\";\n// import NavBar from \"./Navbar\";\n\n// function ExamTest() {\n//   const location = useLocation();\n//   const [examData, setExamData] = useState([]);\n//   const [title, setTitle] = useState(\"\");\n//   const [classs, setClasss] = useState(\"\");\n//   const [questions, setQuestions] = useState([]);\n//   const [answers, setAnswers] = useState(Array.from({ length: 10 }, () => \"\")); // Assuming a maximum of 10 questions\n\n//   // useEffect(() => {\n//   //   // Fetch exam data from the backend\n//   //   fetch(`http://localhost:4002/api/examview/`)\n//   //     .then((response) => response.json())\n//   //     .then((data) => {\n//   //       setExamData(data);\n//   //       console.log()\n//   //     })\n//   //     .catch((error) => console.error(\"Error fetching exam data:\", error));\n//   // }, []);\n\n//   useEffect(() => {\n//     let params = {\n//       id: location.state.examId,\n//     };\n\n//     fetch(\"http://localhost:4002/examtest\", {\n//       method: \"post\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(params),\n//     })\n\n//       .then((res) => res.json())\n//       .then((result) => {\n//         setTitle(result.title);\n//         setClasss(result.class);\n//         setQuestions(result.questions);\n//         console.log(result)\n//       });\n//   }, [location.state.examId]);\n\n//   const handleAnswerChange = (index, value) => {\n//     const newAnswers = [...answers];\n//     newAnswers[index] = value;\n//     setAnswers(newAnswers);\n//   };\n\n//   return (\n//     <>\n//       <NavBar />\n//       <form action=\"\" method=\"post\">\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"title\" className=\"form-label\">\n//             Title\n//           </label>\n//           <input type=\"text\" name=\"title\" className=\"form-control\" value={title} disabled />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"class\" className=\"form-label\">\n//             Class\n//           </label>\n//           <input type=\"text\" name=\"class\" className=\"form-control\" value={classs} disabled />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label className=\"form-label\">Questions</label>\n//           {questions.map((question, index) => (\n//             <div key={index} className=\"mb-3\">\n//               <label htmlFor={`question${index + 1}`} className=\"form-label\">\n//                 {`Question ${index + 1}`}\n//               </label>\n//               <input\n//                 type=\"text\"\n//                 name={`question${index + 1}`}\n//                 className=\"form-control\"\n//                 value={question}\n//                 disabled\n//               />\n//               <label htmlFor={`answer${index + 1}`} className=\"form-label\">\n//                 {`Answer ${index + 1}`}\n//               </label>\n//               <input\n//                 type=\"text\"\n//                 name={`answer${index + 1}`}\n//                 className=\"form-control\"\n//                 value={answers[index]}\n//                 onChange={(e) => handleAnswerChange(index, e.target.value)}\n//               />\n//             </div>\n//           ))}\n//         </div>\n//         <button  className=\"btn btn-danger m-2\" type=\"submit\">submit</button>\n//       </form>\n//     </>\n//   );\n// }\n\n// export default ExamTest;\n\n// import React, { useState, useEffect } from \"react\";\n// import { useLocation } from \"react-router-dom\";\n// import NavBar from \"./Navbar\";\n\n// function ExamTest() {\n//   const location = useLocation();\n//   const [title, setTitle] = useState(\"\");\n//   const [classs, setClasss] = useState(\"\");\n//   const [questions, setQuestions] = useState([]);\n//   const [answers, setAnswers] = useState(Array.from({ length: 10 }, () => \"\"));\n//   const [scheduledStartTime, setScheduledStartTime] = useState(\"\");\n//   const [scheduledEndTime, setScheduledEndTime] = useState(\"\");\n//   const [remainingTime, setRemainingTime] = useState(0);\n\n//   useEffect(() => {\n//     let params = {\n//       id: location.state.examId,\n//     };\n\n//     fetch(\"http://localhost:4002/examtest\", {\n//       method: \"post\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(params),\n//     })\n//       .then((res) => res.json())\n//       .then((result) => {\n//         setTitle(result.title);\n//         setClasss(result.class);\n//         setQuestions(result.questions);\n//         setScheduledStartTime(result.scheduledstartTime);\n//         setScheduledEndTime(result.scheduledendTime);\n\n//         // Calculate remaining time when data is fetched\n//         calculateRemainingTime(result.scheduledstartTime, result.scheduledendTime);\n//       });\n//   }, [location.state.examId]);\n\n//   useEffect(() => {\n//     // Update remaining time every second\n//     const timerInterval = setInterval(() => {\n//       calculateRemainingTime(scheduledStartTime, scheduledEndTime);\n//     }, 1000);\n\n//     // Cleanup the interval on component unmount\n//     return () => clearInterval(timerInterval);\n//   }, [scheduledStartTime, scheduledEndTime]);\n\n//   const calculateRemainingTime = (startTime, endTime) => {\n//     const currentTime = new Date();\n//     const startDateTime = new Date(`${new Date().toDateString()} ${startTime}`);\n//     const endDateTime = new Date(`${new Date().toDateString()} ${endTime}`);\n\n//     const remainingSeconds = Math.max(0, Math.floor((endDateTime - currentTime) / 1000));\n//     setRemainingTime(remainingSeconds);\n//   };\n\n//   const formatTime = (seconds) => {\n//     const minutes = Math.floor(seconds / 60);\n//     const remainingSeconds = seconds % 60;\n//     return `${String(minutes).padStart(2, \"0\")}:${String(remainingSeconds).padStart(2, \"0\")}`;\n//   };\n\n//   const handleAnswerChange = (index, value) => {\n//     const newAnswers = [...answers];\n//     newAnswers[index] = value;\n//     setAnswers(newAnswers);\n//   };\n\n//   return (\n//     <>\n//       <NavBar />\n//       <div className=\"timer\">Remaining Time: {formatTime(remainingTime)}</div>\n//       <form action=\"\" method=\"post\">\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"title\" className=\"form-label\">\n//             Title\n//           </label>\n//           <input type=\"text\" name=\"title\" className=\"form-control\" value={title} disabled />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"class\" className=\"form-label\">\n//             Class\n//           </label>\n//           <input type=\"text\" name=\"class\" className=\"form-control\" value={classs} disabled />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label className=\"form-label\">Questions</label>\n//           {questions.map((question, index) => (\n//             <div key={index} className=\"mb-3\">\n//               <label htmlFor={`question${index + 1}`} className=\"form-label\">\n//                 {`Question ${index + 1}`}\n//               </label>\n//               <input\n//                 type=\"text\"\n//                 name={`question${index + 1}`}\n//                 className=\"form-control\"\n//                 value={question}\n//                 disabled\n//               />\n//               <label htmlFor={`answer${index + 1}`} className=\"form-label\">\n//                 {`Answer ${index + 1}`}\n//               </label>\n//               <input\n//                 type=\"text\"\n//                 name={`answer${index + 1}`}\n//                 className=\"form-control\"\n//                 value={answers[index]}\n//                 onChange={(e) => handleAnswerChange(index, e.target.value)}\n//               />\n//             </div>\n//           ))}\n//         </div>\n//         <button className=\"btn btn-danger m-2\" type=\"submit\">\n//           Submit\n//         </button>\n//       </form>\n//     </>\n//   );\n// }\n\n// export default ExamTest;","map":{"version":3,"names":[],"sources":["C:/Users/anand/OneDrive/Desktop/Examination System/client/src/ExamTest.js"],"sourcesContent":["// // import React,{useState,useEffect} from \"react\";\r\n// // import { useLocation } from \"react-router-dom\";\r\n// // import NavBar from \"./Navbar\";\r\n// // function ExamTest(){\r\n   \r\n// //     // const[title,setTitle]=useState('')\r\n// //     const [examData, setExamData] = useState([]);\r\n// //     const [title,setTitle]=useState('')\r\n// //     const [classs,setClasss]=useState('')\r\n// //     const [question,setQuestion]=useState('')\r\n// //     const [isScheduling, setIsScheduling] = useState(false);\r\n// //     const [selectedExam, setSelectedExam] = useState(null);\r\n// //   const location=useLocation()\r\n// //   // console.log(location.state.examId\r\n// //     // )\r\n// //     useEffect(() => {\r\n// //       // Fetch exam data from the backend\r\n// //       fetch(`http://localhost:4002/api/examview/`)\r\n// //         .then((response) => response.json())\r\n// //         .then((data) => {\r\n// //           setExamData(data);\r\n// //           // console.log(\"Fetched Exam Data:\", data);\r\n// //         })\r\n// //         .catch((error) => console.error(\"Error fetching exam data:\", error));\r\n// //     }, []);\r\n    \r\n// //   useEffect(()=>{\r\n// //     let params = {\r\n// //         id:location.state.examId\r\n// //     }\r\n// //     fetch('http://localhost:4002/examtest',{\r\n// //         method:'post',\r\n// //         headers:{\r\n// //             Accept:'application/json',\r\n// //             'Content-Type':'application/json'\r\n// //         },\r\n// //         body:JSON.stringify(params)\r\n// //     }).then((res)=>res.json()).then((result)=>{\r\n// //       console.log(result,\"hii\")\r\n// //       setTitle(result.title)\r\n// //       setClasss(result.class)\r\n// //       setQuestion(result.questions)\r\n        \r\n            \r\n// //     })\r\n    \r\n// //   },[])\r\n\r\n// //     return(\r\n// //         <>\r\n// //        <NavBar/>\r\n// //        <form action=\"\" method=\"post\" >\r\n// //                 <div className=\"mb-3\">\r\n// //                   <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Title</label>\r\n// //                   <input type=\"text\"  name='title'className=\"form-control\" value={title} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"  disabled/>\r\n// //                 </div>\r\n// //                 <div className=\"mb-3\">\r\n// //                   <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Class</label>\r\n// //                   <input type=\"text\"  name='class'className=\"form-control\" value={classs} disabledid=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n// //                 </div>\r\n// //                 <div className=\"mb-3\">\r\n// //                   <label htmlFor=\"exampleInputEmail1\"className=\"form-control\" >Questions <input type=\"text\"  name='questions'className=\"form-control\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" /></label>\r\n// //                   <input type=\"text\"  name='questions'className=\"form-control\"value={question}  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                 \r\n// //                 </div>\r\n              \r\n                \r\n                \r\n// //                 </form>\r\n// //         </>\r\n// //     )\r\n// // }\r\n// // export  default ExamTest\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { useLocation } from \"react-router-dom\";\r\n// import NavBar from \"./Navbar\";\r\n\r\n// function ExamTest() {\r\n//   const location = useLocation();\r\n//   const [examData, setExamData] = useState([]);\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [classs, setClasss] = useState(\"\");\r\n//   const [questions, setQuestions] = useState([]);\r\n//   const [answers, setAnswers] = useState(Array.from({ length: 10 }, () => \"\")); // Assuming a maximum of 10 questions\r\n\r\n//   // useEffect(() => {\r\n//   //   // Fetch exam data from the backend\r\n//   //   fetch(`http://localhost:4002/api/examview/`)\r\n//   //     .then((response) => response.json())\r\n//   //     .then((data) => {\r\n//   //       setExamData(data);\r\n//   //       console.log()\r\n//   //     })\r\n//   //     .catch((error) => console.error(\"Error fetching exam data:\", error));\r\n//   // }, []);\r\n\r\n//   useEffect(() => {\r\n//     let params = {\r\n//       id: location.state.examId,\r\n//     };\r\n\r\n//     fetch(\"http://localhost:4002/examtest\", {\r\n//       method: \"post\",\r\n//       headers: {\r\n//         Accept: \"application/json\",\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//       body: JSON.stringify(params),\r\n//     })\r\n\r\n//       .then((res) => res.json())\r\n//       .then((result) => {\r\n//         setTitle(result.title);\r\n//         setClasss(result.class);\r\n//         setQuestions(result.questions);\r\n//         console.log(result)\r\n//       });\r\n//   }, [location.state.examId]);\r\n\r\n//   const handleAnswerChange = (index, value) => {\r\n//     const newAnswers = [...answers];\r\n//     newAnswers[index] = value;\r\n//     setAnswers(newAnswers);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <NavBar />\r\n//       <form action=\"\" method=\"post\">\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"title\" className=\"form-label\">\r\n//             Title\r\n//           </label>\r\n//           <input type=\"text\" name=\"title\" className=\"form-control\" value={title} disabled />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"class\" className=\"form-label\">\r\n//             Class\r\n//           </label>\r\n//           <input type=\"text\" name=\"class\" className=\"form-control\" value={classs} disabled />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label className=\"form-label\">Questions</label>\r\n//           {questions.map((question, index) => (\r\n//             <div key={index} className=\"mb-3\">\r\n//               <label htmlFor={`question${index + 1}`} className=\"form-label\">\r\n//                 {`Question ${index + 1}`}\r\n//               </label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name={`question${index + 1}`}\r\n//                 className=\"form-control\"\r\n//                 value={question}\r\n//                 disabled\r\n//               />\r\n//               <label htmlFor={`answer${index + 1}`} className=\"form-label\">\r\n//                 {`Answer ${index + 1}`}\r\n//               </label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name={`answer${index + 1}`}\r\n//                 className=\"form-control\"\r\n//                 value={answers[index]}\r\n//                 onChange={(e) => handleAnswerChange(index, e.target.value)}\r\n//               />\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//         <button  className=\"btn btn-danger m-2\" type=\"submit\">submit</button>\r\n//       </form>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default ExamTest;\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { useLocation } from \"react-router-dom\";\r\n// import NavBar from \"./Navbar\";\r\n\r\n// function ExamTest() {\r\n//   const location = useLocation();\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [classs, setClasss] = useState(\"\");\r\n//   const [questions, setQuestions] = useState([]);\r\n//   const [answers, setAnswers] = useState(Array.from({ length: 10 }, () => \"\"));\r\n//   const [scheduledStartTime, setScheduledStartTime] = useState(\"\");\r\n//   const [scheduledEndTime, setScheduledEndTime] = useState(\"\");\r\n//   const [remainingTime, setRemainingTime] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     let params = {\r\n//       id: location.state.examId,\r\n//     };\r\n\r\n//     fetch(\"http://localhost:4002/examtest\", {\r\n//       method: \"post\",\r\n//       headers: {\r\n//         Accept: \"application/json\",\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//       body: JSON.stringify(params),\r\n//     })\r\n//       .then((res) => res.json())\r\n//       .then((result) => {\r\n//         setTitle(result.title);\r\n//         setClasss(result.class);\r\n//         setQuestions(result.questions);\r\n//         setScheduledStartTime(result.scheduledstartTime);\r\n//         setScheduledEndTime(result.scheduledendTime);\r\n\r\n//         // Calculate remaining time when data is fetched\r\n//         calculateRemainingTime(result.scheduledstartTime, result.scheduledendTime);\r\n//       });\r\n//   }, [location.state.examId]);\r\n\r\n//   useEffect(() => {\r\n//     // Update remaining time every second\r\n//     const timerInterval = setInterval(() => {\r\n//       calculateRemainingTime(scheduledStartTime, scheduledEndTime);\r\n//     }, 1000);\r\n\r\n//     // Cleanup the interval on component unmount\r\n//     return () => clearInterval(timerInterval);\r\n//   }, [scheduledStartTime, scheduledEndTime]);\r\n\r\n//   const calculateRemainingTime = (startTime, endTime) => {\r\n//     const currentTime = new Date();\r\n//     const startDateTime = new Date(`${new Date().toDateString()} ${startTime}`);\r\n//     const endDateTime = new Date(`${new Date().toDateString()} ${endTime}`);\r\n\r\n//     const remainingSeconds = Math.max(0, Math.floor((endDateTime - currentTime) / 1000));\r\n//     setRemainingTime(remainingSeconds);\r\n//   };\r\n\r\n//   const formatTime = (seconds) => {\r\n//     const minutes = Math.floor(seconds / 60);\r\n//     const remainingSeconds = seconds % 60;\r\n//     return `${String(minutes).padStart(2, \"0\")}:${String(remainingSeconds).padStart(2, \"0\")}`;\r\n//   };\r\n\r\n//   const handleAnswerChange = (index, value) => {\r\n//     const newAnswers = [...answers];\r\n//     newAnswers[index] = value;\r\n//     setAnswers(newAnswers);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <NavBar />\r\n//       <div className=\"timer\">Remaining Time: {formatTime(remainingTime)}</div>\r\n//       <form action=\"\" method=\"post\">\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"title\" className=\"form-label\">\r\n//             Title\r\n//           </label>\r\n//           <input type=\"text\" name=\"title\" className=\"form-control\" value={title} disabled />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"class\" className=\"form-label\">\r\n//             Class\r\n//           </label>\r\n//           <input type=\"text\" name=\"class\" className=\"form-control\" value={classs} disabled />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label className=\"form-label\">Questions</label>\r\n//           {questions.map((question, index) => (\r\n//             <div key={index} className=\"mb-3\">\r\n//               <label htmlFor={`question${index + 1}`} className=\"form-label\">\r\n//                 {`Question ${index + 1}`}\r\n//               </label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name={`question${index + 1}`}\r\n//                 className=\"form-control\"\r\n//                 value={question}\r\n//                 disabled\r\n//               />\r\n//               <label htmlFor={`answer${index + 1}`} className=\"form-label\">\r\n//                 {`Answer ${index + 1}`}\r\n//               </label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name={`answer${index + 1}`}\r\n//                 className=\"form-control\"\r\n//                 value={answers[index]}\r\n//                 onChange={(e) => handleAnswerChange(index, e.target.value)}\r\n//               />\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//         <button className=\"btn btn-danger m-2\" type=\"submit\">\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default ExamTest;\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}