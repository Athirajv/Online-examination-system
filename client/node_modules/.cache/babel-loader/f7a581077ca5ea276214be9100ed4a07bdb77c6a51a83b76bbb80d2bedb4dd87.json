{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\OneDrive\\\\Desktop\\\\Examination System\\\\client\\\\src\\\\ExamTest.js\",\n  _s = $RefreshSig$();\n// import React,{useState} from \"react\";\n// import NavBar from \"./Navbar\";\n// function ExamTest(){\n//     const [examData, setExamData] = useState([]);\n//     const[title,setTitle]=useState('')\n\n//     return(\n//         <>\n//        <NavBar/>\n//        <form action=\"\" method=\"post\" >\n//                 <div className=\"mb-3\">\n//                   <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Title</label>\n//                   <input type=\"text\"  name='title'className=\"form-control\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n//                 </div>\n//                 <div className=\"mb-3\">\n//                   <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Class</label>\n//                   <input type=\"text\"  name='class'className=\"form-control\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n//                 </div>\n//                 <div className=\"mb-3\">\n//                   <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Questions</label>\n//                   <input type=\"text\"  name='questions'className=\"form-control\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n//                 </div>\n\n//                 </form>\n//         </>\n//     )\n// }\n// export  default ExamTest\n\n// ExamTest.js\n// ExamTest.js\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamTest = ({\n  selectedExam\n}) => {\n  _s();\n  // Check if selectedExam and selectedExam.questions are defined\n  if (!selectedExam || !selectedExam.questions) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error: Exam data not available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  const [answers, setAnswers] = useState(Array(selectedExam.questions.length).fill(\"\"));\n  const handleAnswerChange = (index, answer) => {\n    setAnswers(prevAnswers => {\n      const newAnswers = [...prevAnswers];\n      newAnswers[index] = answer;\n      return newAnswers;\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Implement logic to submit answers to the backend\n    // ...\n\n    // Example: console.log(\"Submitted Answers:\", answers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"\\u1D07x\\u1D00\\u1D0D \\u1D1B\\u1D07s\\u1D1B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedExam.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), selectedExam.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: answers[index],\n          onChange: e => handleAnswerChange(index, e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamTest, \"MlRuxmYCss959Jz9d8u8fmi5NN0=\");\n_c = ExamTest;\nexport default ExamTest;\nvar _c;\n$RefreshReg$(_c, \"ExamTest\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExamTest","selectedExam","_s","questions","children","fileName","_jsxFileName","lineNumber","columnNumber","answers","setAnswers","Array","length","fill","handleAnswerChange","index","answer","prevAnswers","newAnswers","handleSubmit","e","preventDefault","className","onSubmit","title","map","question","value","onChange","target","required","type","_c","$RefreshReg$"],"sources":["C:/Users/anand/OneDrive/Desktop/Examination System/client/src/ExamTest.js"],"sourcesContent":["// import React,{useState} from \"react\";\r\n// import NavBar from \"./Navbar\";\r\n// function ExamTest(){\r\n//     const [examData, setExamData] = useState([]);\r\n//     const[title,setTitle]=useState('')\r\n    \r\n//     return(\r\n//         <>\r\n//        <NavBar/>\r\n//        <form action=\"\" method=\"post\" >\r\n//                 <div className=\"mb-3\">\r\n//                   <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Title</label>\r\n//                   <input type=\"text\"  name='title'className=\"form-control\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n//                 </div>\r\n//                 <div className=\"mb-3\">\r\n//                   <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Class</label>\r\n//                   <input type=\"text\"  name='class'className=\"form-control\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n//                 </div>\r\n//                 <div className=\"mb-3\">\r\n//                   <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Questions</label>\r\n//                   <input type=\"text\"  name='questions'className=\"form-control\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n//                 </div>\r\n              \r\n                \r\n                \r\n//                 </form>\r\n//         </>\r\n//     )\r\n// }\r\n// export  default ExamTest\r\n\r\n// ExamTest.js\r\n// ExamTest.js\r\nimport React, { useState } from \"react\";\r\n\r\nconst ExamTest = ({ selectedExam }) => {\r\n  // Check if selectedExam and selectedExam.questions are defined\r\n  if (!selectedExam || !selectedExam.questions) {\r\n    return <div>Error: Exam data not available.</div>;\r\n  }\r\n\r\n  const [answers, setAnswers] = useState(Array(selectedExam.questions.length).fill(\"\"));\r\n\r\n  const handleAnswerChange = (index, answer) => {\r\n    setAnswers((prevAnswers) => {\r\n      const newAnswers = [...prevAnswers];\r\n      newAnswers[index] = answer;\r\n      return newAnswers;\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Implement logic to submit answers to the backend\r\n    // ...\r\n\r\n    // Example: console.log(\"Submitted Answers:\", answers);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <h1 className=\"text-center\">ᴇxᴀᴍ ᴛᴇsᴛ</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <h2>{selectedExam.title}</h2>\r\n        {selectedExam.questions.map((question, index) => (\r\n          <div key={index}>\r\n            <p>{question}</p>\r\n            <textarea\r\n              value={answers[index]}\r\n              onChange={(e) => handleAnswerChange(index, e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamTest;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}