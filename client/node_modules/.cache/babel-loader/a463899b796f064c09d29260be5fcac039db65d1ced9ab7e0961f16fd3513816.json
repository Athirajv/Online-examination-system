{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\OneDrive\\\\Desktop\\\\Examination System\\\\client\\\\src\\\\ExamView.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n\n// const ExamView = () => {\n//   const { examId } = useParams();\n//   const [examData, setExamData] = useState(null);\n\n//   useEffect(() => {\n//     // Fetch exam data from the backend based on examId\n//     fetch(`http://localhost:4002/api/examview`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setExamData(data);\n//         console.log(data);\n//       })\n//       .catch((error) => console.error(\"Error fetching exam data:\", error));\n//   }, []);\n//   if (!examData) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>{examData.title}</h1>\n//       <p>Class: {examData.class}</p>\n\n//       {examData.questions && examData.questions.length > 0 ? (\n//         <>\n//           <h2>Questions:</h2>\n//           <ul>\n//             {examData.questions.map((question, index) => (\n//               <li key={index}>{question}</li>\n//             ))}\n//           </ul>\n//         </>\n//       ) : (\n//         <p>No questions available for this exam.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ExamView;\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n\n// const ExamView = () => {\n//   const { examId } = useParams();\n//   const [examData, setExamData] = useState(null);\n\n//   useEffect(() => {\n//     // Fetch exam data from the backend based on examId\n//     fetch(`http://localhost:4002/api/examview`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setExamData(data);\n//         console.log(\"Fetched Exam Data:\", data); // Log the fetched data\n//       })\n//       .catch((error) => console.error(\"Error fetching exam data:\", error));\n//   }, [examId]);\n\n//   console.log(\"Exam Data State:\", examData); // Log the state\n\n//   if (!examData) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>{examData.title}</h1>\n//       <p>Class: {examData.class}</p>\n\n//       {examData.questions && examData.questions.length > 0 ? (\n//         <>\n//           <h2>Questions:</h2>\n//           <ul>\n//             {examData.questions.map((question, index) => (\n//               <li key={index}>{question}</li>\n//             ))}\n//           </ul>\n//         </>\n//       ) : (\n//         <p>No questions available for this exam.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ExamView;\n\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n\n// const ExamView = () => {\n//   const { examId } = useParams();\n//   const [examData, setExamData] = useState(null);\n\n//   useEffect(() => {\n//     // Fetch exam data from the backend based on examId\n//     fetch(`http://localhost:4002/api/examview`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setExamData(data);\n//         console.log(data);\n//       })\n//       .catch((error) => console.error(\"Error fetching exam data:\", error));\n//   }, []);\n//   if (!examData) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>{examData.title}</h1>\n//       <p>Class: {examData.class}</p>\n\n//       {examData.questions && examData.questions.length > 0 ? (\n//         <>\n//           <h2>Questions:</h2>\n//           <ul>\n//             {examData.questions.map((question, index) => (\n//               <li key={index}>{question}</li>\n//             ))}\n//           </ul>\n//         </>\n//       ) : (\n//         <p>No questions available for this exam.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ExamView;\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExamView = () => {\n  _s();\n  const {\n    examId\n  } = useParams();\n  const [examData, setExamData] = useState(null);\n  useEffect(() => {\n    // Fetch exam data from the backend based on examId\n    fetch(`http://localhost:4002/api/examview`).then(response => response.json()).then(data => {\n      setExamData(data);\n      console.log(\"Fetched Exam Data:\", data); // Log the fetched data\n    }).catch(error => console.error(\"Error fetching exam data:\", error));\n  }, [examId]);\n  console.log(\"Exam Data State:\", examData); // Log the state\n\n  if (!examData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: examData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Class: \", examData.class]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), examData.questions && examData.questions.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Questions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: examData.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: question\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No questions available for this exam.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamView, \"qrImhwN11vHacZfq/05XrNsHXXU=\", false, function () {\n  return [useParams];\n});\n_c = ExamView;\nexport default ExamView;\nvar _c;\n$RefreshReg$(_c, \"ExamView\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","ExamView","_s","examId","examData","setExamData","fetch","then","response","json","data","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","title","class","questions","length","map","question","index","_c","$RefreshReg$"],"sources":["C:/Users/anand/OneDrive/Desktop/Examination System/client/src/ExamView.js"],"sourcesContent":["\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { useParams } from \"react-router-dom\";\r\n\r\n// const ExamView = () => {\r\n//   const { examId } = useParams();\r\n//   const [examData, setExamData] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch exam data from the backend based on examId\r\n//     fetch(`http://localhost:4002/api/examview`)\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setExamData(data);\r\n//         console.log(data);\r\n//       })\r\n//       .catch((error) => console.error(\"Error fetching exam data:\", error));\r\n//   }, []);\r\n//   if (!examData) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>{examData.title}</h1>\r\n//       <p>Class: {examData.class}</p>\r\n\r\n//       {examData.questions && examData.questions.length > 0 ? (\r\n//         <>\r\n//           <h2>Questions:</h2>\r\n//           <ul>\r\n//             {examData.questions.map((question, index) => (\r\n//               <li key={index}>{question}</li>\r\n//             ))}\r\n//           </ul>\r\n//         </>\r\n//       ) : (\r\n//         <p>No questions available for this exam.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ExamView;\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { useParams } from \"react-router-dom\";\r\n\r\n// const ExamView = () => {\r\n//   const { examId } = useParams();\r\n//   const [examData, setExamData] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch exam data from the backend based on examId\r\n//     fetch(`http://localhost:4002/api/examview`)\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setExamData(data);\r\n//         console.log(\"Fetched Exam Data:\", data); // Log the fetched data\r\n//       })\r\n//       .catch((error) => console.error(\"Error fetching exam data:\", error));\r\n//   }, [examId]);\r\n\r\n//   console.log(\"Exam Data State:\", examData); // Log the state\r\n\r\n//   if (!examData) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>{examData.title}</h1>\r\n//       <p>Class: {examData.class}</p>\r\n\r\n//       {examData.questions && examData.questions.length > 0 ? (\r\n//         <>\r\n//           <h2>Questions:</h2>\r\n//           <ul>\r\n//             {examData.questions.map((question, index) => (\r\n//               <li key={index}>{question}</li>\r\n//             ))}\r\n//           </ul>\r\n//         </>\r\n//       ) : (\r\n//         <p>No questions available for this exam.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ExamView;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { useParams } from \"react-router-dom\";\r\n\r\n// const ExamView = () => {\r\n//   const { examId } = useParams();\r\n//   const [examData, setExamData] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch exam data from the backend based on examId\r\n//     fetch(`http://localhost:4002/api/examview`)\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setExamData(data);\r\n//         console.log(data);\r\n//       })\r\n//       .catch((error) => console.error(\"Error fetching exam data:\", error));\r\n//   }, []);\r\n//   if (!examData) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>{examData.title}</h1>\r\n//       <p>Class: {examData.class}</p>\r\n\r\n//       {examData.questions && examData.questions.length > 0 ? (\r\n//         <>\r\n//           <h2>Questions:</h2>\r\n//           <ul>\r\n//             {examData.questions.map((question, index) => (\r\n//               <li key={index}>{question}</li>\r\n//             ))}\r\n//           </ul>\r\n//         </>\r\n//       ) : (\r\n//         <p>No questions available for this exam.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ExamView;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst ExamView = () => {\r\n  const { examId } = useParams();\r\n  const [examData, setExamData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch exam data from the backend based on examId\r\n    fetch(`http://localhost:4002/api/examview`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setExamData(data);\r\n        console.log(\"Fetched Exam Data:\", data); // Log the fetched data\r\n      })\r\n      .catch((error) => console.error(\"Error fetching exam data:\", error));\r\n  }, [examId]);\r\n\r\n  console.log(\"Exam Data State:\", examData); // Log the state\r\n\r\n  if (!examData) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{examData.title}</h1>\r\n      <p>Class: {examData.class}</p>\r\n\r\n      {examData.questions && examData.questions.length > 0 ? (\r\n        <>\r\n          <h2>Questions:</h2>\r\n          <ul>\r\n            {examData.questions.map((question, index) => (\r\n              <li key={index}>{question}</li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      ) : (\r\n        <p>No questions available for this exam.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamView;\r\n"],"mappings":";;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAO,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACAW,KAAK,CAAE,oCAAmC,CAAC,CACxCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdL,WAAW,CAACK,IAAI,CAAC;MACjBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,IAAI,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;EACxE,CAAC,EAAE,CAACX,MAAM,CAAC,CAAC;EAEZQ,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAER,QAAQ,CAAC,CAAC,CAAC;;EAE3C,IAAI,CAACA,QAAQ,EAAE;IACb,oBAAON,OAAA;MAAAiB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACErB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAKX,QAAQ,CAACgB;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBrB,OAAA;MAAAiB,QAAA,GAAG,SAAO,EAACX,QAAQ,CAACiB,KAAK;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE7Bf,QAAQ,CAACkB,SAAS,IAAIlB,QAAQ,CAACkB,SAAS,CAACC,MAAM,GAAG,CAAC,gBAClDzB,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBrB,OAAA;QAAAiB,QAAA,EACGX,QAAQ,CAACkB,SAAS,CAACE,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBACtC5B,OAAA;UAAAiB,QAAA,EAAiBU;QAAQ,GAAhBC,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CAC/B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,eACL,CAAC,gBAEHrB,OAAA;MAAAiB,QAAA,EAAG;IAAqC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC5C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CAxCID,QAAQ;EAAA,QACOL,SAAS;AAAA;AAAA+B,EAAA,GADxB1B,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}