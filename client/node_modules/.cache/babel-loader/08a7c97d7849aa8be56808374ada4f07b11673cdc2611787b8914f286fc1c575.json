{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\OneDrive\\\\Desktop\\\\Examination System\\\\client\\\\src\\\\ExamView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamView = () => {\n  _s();\n  // const { examId } = useParams();\n  const [examData, setExamData] = useState([]);\n  console.log(examData);\n  useEffect(() => {\n    // Fetch exam data from the backend based on examId\n    fetch(`http://localhost:4002/api/examview/`).then(response => response.json()).then(data => {\n      setExamData(data);\n      console.log(\"Fetched Exam Data:\", data);\n    }).catch(error => console.error(\"Error fetching exam data:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Exam Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: examData.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Class: \", item.class]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Title: \", item.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Questions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: item.questions.map((question, qIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: question\n          }, qIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamView, \"cSb6WBc5ygtC4wRiJxCephOMHG4=\");\n_c = ExamView;\nexport default ExamView;\nvar _c;\n$RefreshReg$(_c, \"ExamView\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","ExamView","_s","examData","setExamData","console","log","fetch","then","response","json","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","class","title","questions","question","qIndex","_c","$RefreshReg$"],"sources":["C:/Users/anand/OneDrive/Desktop/Examination System/client/src/ExamView.js"],"sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst ExamView = () => {\r\n  // const { examId } = useParams();\r\n  const [examData, setExamData] = useState([]);\r\n  console.log(examData);\r\n\r\n  useEffect(() => {\r\n    // Fetch exam data from the backend based on examId\r\n    fetch(`http://localhost:4002/api/examview/`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setExamData(data);\r\n        console.log(\"Fetched Exam Data:\", data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching exam data:\", error));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Exam Data</h1>\r\n      <ul>\r\n        {examData.map((item, index) => (\r\n          <li key={index}>\r\n            <p>Class: {item.class}</p>\r\n            <p>Title: {item.title}</p>\r\n          \r\n            <p>Questions:</p>\r\n            <ul>\r\n              {item.questions.map((question, qIndex) => (\r\n                <li key={qIndex}>{question}</li>\r\n              ))}\r\n            </ul>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamView;\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5CS,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EAErBN,SAAS,CAAC,MAAM;IACd;IACAU,KAAK,CAAE,qCAAoC,CAAC,CACzCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdP,WAAW,CAACO,IAAI,CAAC;MACjBN,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEK,IAAI,CAAC;IACzC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKR,OAAO,CAACQ,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;EACxE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBlB,OAAA;MAAAc,QAAA,EACGX,QAAQ,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBrB,OAAA;QAAAc,QAAA,gBACEd,OAAA;UAAAc,QAAA,GAAG,SAAO,EAACM,IAAI,CAACE,KAAK;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BlB,OAAA;UAAAc,QAAA,GAAG,SAAO,EAACM,IAAI,CAACG,KAAK;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAE1BlB,OAAA;UAAAc,QAAA,EAAG;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACjBlB,OAAA;UAAAc,QAAA,EACGM,IAAI,CAACI,SAAS,CAACL,GAAG,CAAC,CAACM,QAAQ,EAAEC,MAAM,kBACnC1B,OAAA;YAAAc,QAAA,EAAkBW;UAAQ,GAAjBC,MAAM;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAgB,CAChC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA,GATEG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAChB,EAAA,CApCID,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}