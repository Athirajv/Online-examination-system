{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\OneDrive\\\\Desktop\\\\Examination System\\\\client\\\\src\\\\ExamTest.js\",\n  _s = $RefreshSig$();\n// // import React,{useState,useEffect} from \"react\";\n// // import { useLocation } from \"react-router-dom\";\n// // import NavBar from \"./Navbar\";\n// // function ExamTest(){\n\n// //     // const[title,setTitle]=useState('')\n// //     const [examData, setExamData] = useState([]);\n// //     const [title,setTitle]=useState('')\n// //     const [classs,setClasss]=useState('')\n// //     const [question,setQuestion]=useState('')\n// //     const [isScheduling, setIsScheduling] = useState(false);\n// //     const [selectedExam, setSelectedExam] = useState(null);\n// //   const location=useLocation()\n// //   // console.log(location.state.examId\n// //     // )\n// //     useEffect(() => {\n// //       // Fetch exam data from the backend\n// //       fetch(`http://localhost:4002/api/examview/`)\n// //         .then((response) => response.json())\n// //         .then((data) => {\n// //           setExamData(data);\n// //           // console.log(\"Fetched Exam Data:\", data);\n// //         })\n// //         .catch((error) => console.error(\"Error fetching exam data:\", error));\n// //     }, []);\n\n// //   useEffect(()=>{\n// //     let params = {\n// //         id:location.state.examId\n// //     }\n// //     fetch('http://localhost:4002/examtest',{\n// //         method:'post',\n// //         headers:{\n// //             Accept:'application/json',\n// //             'Content-Type':'application/json'\n// //         },\n// //         body:JSON.stringify(params)\n// //     }).then((res)=>res.json()).then((result)=>{\n// //       console.log(result,\"hii\")\n// //       setTitle(result.title)\n// //       setClasss(result.class)\n// //       setQuestion(result.questions)\n\n// //     })\n\n// //   },[])\n\n// //     return(\n// //         <>\n// //        <NavBar/>\n// //        <form action=\"\" method=\"post\" >\n// //                 <div className=\"mb-3\">\n// //                   <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Title</label>\n// //                   <input type=\"text\"  name='title'className=\"form-control\" value={title} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"  disabled/>\n// //                 </div>\n// //                 <div className=\"mb-3\">\n// //                   <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Class</label>\n// //                   <input type=\"text\"  name='class'className=\"form-control\" value={classs} disabledid=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n// //                 </div>\n// //                 <div className=\"mb-3\">\n// //                   <label htmlFor=\"exampleInputEmail1\"className=\"form-control\" >Questions <input type=\"text\"  name='questions'className=\"form-control\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" /></label>\n// //                   <input type=\"text\"  name='questions'className=\"form-control\"value={question}  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n\n// //                 </div>\n\n// //                 </form>\n// //         </>\n// //     )\n// // }\n// // export  default ExamTest\n\n// import React, { useState, useEffect } from \"react\";\n// import { useLocation } from \"react-router-dom\";\n// import NavBar from \"./Navbar\";\n\n// function ExamTest() {\n//   const location = useLocation();\n//   const [examData, setExamData] = useState([]);\n//   const [title, setTitle] = useState(\"\");\n//   const [classs, setClasss] = useState(\"\");\n//   const [questions, setQuestions] = useState([]);\n//   const [answers, setAnswers] = useState(Array.from({ length: 10 }, () => \"\")); // Assuming a maximum of 10 questions\n\n//   // useEffect(() => {\n//   //   // Fetch exam data from the backend\n//   //   fetch(`http://localhost:4002/api/examview/`)\n//   //     .then((response) => response.json())\n//   //     .then((data) => {\n//   //       setExamData(data);\n//   //       console.log()\n//   //     })\n//   //     .catch((error) => console.error(\"Error fetching exam data:\", error));\n//   // }, []);\n\n//   useEffect(() => {\n//     let params = {\n//       id: location.state.examId,\n//     };\n\n//     fetch(\"http://localhost:4002/examtest\", {\n//       method: \"post\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(params),\n//     })\n\n//       .then((res) => res.json())\n//       .then((result) => {\n//         setTitle(result.title);\n//         setClasss(result.class);\n//         setQuestions(result.questions);\n//         console.log(result)\n//       });\n//   }, [location.state.examId]);\n\n//   const handleAnswerChange = (index, value) => {\n//     const newAnswers = [...answers];\n//     newAnswers[index] = value;\n//     setAnswers(newAnswers);\n//   };\n\n//   return (\n//     <>\n//       <NavBar />\n//       <form action=\"\" method=\"post\">\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"title\" className=\"form-label\">\n//             Title\n//           </label>\n//           <input type=\"text\" name=\"title\" className=\"form-control\" value={title} disabled />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"class\" className=\"form-label\">\n//             Class\n//           </label>\n//           <input type=\"text\" name=\"class\" className=\"form-control\" value={classs} disabled />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label className=\"form-label\">Questions</label>\n//           {questions.map((question, index) => (\n//             <div key={index} className=\"mb-3\">\n//               <label htmlFor={`question${index + 1}`} className=\"form-label\">\n//                 {`Question ${index + 1}`}\n//               </label>\n//               <input\n//                 type=\"text\"\n//                 name={`question${index + 1}`}\n//                 className=\"form-control\"\n//                 value={question}\n//                 disabled\n//               />\n//               <label htmlFor={`answer${index + 1}`} className=\"form-label\">\n//                 {`Answer ${index + 1}`}\n//               </label>\n//               <input\n//                 type=\"text\"\n//                 name={`answer${index + 1}`}\n//                 className=\"form-control\"\n//                 value={answers[index]}\n//                 onChange={(e) => handleAnswerChange(index, e.target.value)}\n//               />\n//             </div>\n//           ))}\n//         </div>\n//         <button  className=\"btn btn-danger m-2\" type=\"submit\">submit</button>\n//       </form>\n//     </>\n//   );\n// }\n\n// export default ExamTest;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport NavBar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ExamTest() {\n  _s();\n  const location = useLocation();\n  const [title, setTitle] = useState(\"\");\n  const [classs, setClasss] = useState(\"\");\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState(Array.from({\n    length: 10\n  }, () => \"\"));\n  const [remainingTime, setRemainingTime] = useState(60 * 60); // Initial time in seconds, e.g., 1 hour\n\n  useEffect(() => {\n    let params = {\n      id: location.state.examId\n    };\n    fetch(\"http://localhost:4002/examtest\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(params)\n    }).then(res => res.json()).then(result => {\n      setTitle(result.title);\n      setClasss(result.class);\n      setQuestions(result.questions);\n      console;\n    });\n  }, [location.state.examId]);\n  useEffect(() => {\n    const timerInterval = setInterval(() => {\n      setRemainingTime(prevTime => prevTime > 0 ? prevTime - 1 : 0);\n    }, 1000);\n\n    // Cleanup the interval on component unmount\n    return () => clearInterval(timerInterval);\n  }, []);\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${String(minutes).padStart(2, \"0\")}:${String(remainingSeconds).padStart(2, \"0\")}`;\n  };\n  const handleAnswerChange = (index, value) => {\n    const newAnswers = [...answers];\n    newAnswers[index] = value;\n    setAnswers(newAnswers);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [\"Remaining Time: \", formatTime(remainingTime)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      method: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          className: \"form-label\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          className: \"form-control\",\n          value: title,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"class\",\n          className: \"form-label\",\n          children: \"Class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"class\",\n          className: \"form-control\",\n          value: classs,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `question${index + 1}`,\n            className: \"form-label\",\n            children: `Question ${index + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: `question${index + 1}`,\n            className: \"form-control\",\n            value: question,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `answer${index + 1}`,\n            className: \"form-label\",\n            children: `Answer ${index + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: `answer${index + 1}`,\n            className: \"form-control\",\n            value: answers[index],\n            onChange: e => handleAnswerChange(index, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger m-2\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ExamTest, \"pMx5hQd96jirmKAF4+RS0Qt+UNU=\", false, function () {\n  return [useLocation];\n});\n_c = ExamTest;\nexport default ExamTest;\nvar _c;\n$RefreshReg$(_c, \"ExamTest\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","NavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","ExamTest","_s","location","title","setTitle","classs","setClasss","questions","setQuestions","answers","setAnswers","Array","from","length","remainingTime","setRemainingTime","params","id","state","examId","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","result","class","console","timerInterval","setInterval","prevTime","clearInterval","formatTime","seconds","minutes","Math","floor","remainingSeconds","String","padStart","handleAnswerChange","index","value","newAnswers","children","fileName","_jsxFileName","lineNumber","columnNumber","className","action","htmlFor","type","name","disabled","map","question","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/anand/OneDrive/Desktop/Examination System/client/src/ExamTest.js"],"sourcesContent":["// // import React,{useState,useEffect} from \"react\";\r\n// // import { useLocation } from \"react-router-dom\";\r\n// // import NavBar from \"./Navbar\";\r\n// // function ExamTest(){\r\n   \r\n// //     // const[title,setTitle]=useState('')\r\n// //     const [examData, setExamData] = useState([]);\r\n// //     const [title,setTitle]=useState('')\r\n// //     const [classs,setClasss]=useState('')\r\n// //     const [question,setQuestion]=useState('')\r\n// //     const [isScheduling, setIsScheduling] = useState(false);\r\n// //     const [selectedExam, setSelectedExam] = useState(null);\r\n// //   const location=useLocation()\r\n// //   // console.log(location.state.examId\r\n// //     // )\r\n// //     useEffect(() => {\r\n// //       // Fetch exam data from the backend\r\n// //       fetch(`http://localhost:4002/api/examview/`)\r\n// //         .then((response) => response.json())\r\n// //         .then((data) => {\r\n// //           setExamData(data);\r\n// //           // console.log(\"Fetched Exam Data:\", data);\r\n// //         })\r\n// //         .catch((error) => console.error(\"Error fetching exam data:\", error));\r\n// //     }, []);\r\n    \r\n// //   useEffect(()=>{\r\n// //     let params = {\r\n// //         id:location.state.examId\r\n// //     }\r\n// //     fetch('http://localhost:4002/examtest',{\r\n// //         method:'post',\r\n// //         headers:{\r\n// //             Accept:'application/json',\r\n// //             'Content-Type':'application/json'\r\n// //         },\r\n// //         body:JSON.stringify(params)\r\n// //     }).then((res)=>res.json()).then((result)=>{\r\n// //       console.log(result,\"hii\")\r\n// //       setTitle(result.title)\r\n// //       setClasss(result.class)\r\n// //       setQuestion(result.questions)\r\n        \r\n            \r\n// //     })\r\n    \r\n// //   },[])\r\n\r\n// //     return(\r\n// //         <>\r\n// //        <NavBar/>\r\n// //        <form action=\"\" method=\"post\" >\r\n// //                 <div className=\"mb-3\">\r\n// //                   <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Title</label>\r\n// //                   <input type=\"text\"  name='title'className=\"form-control\" value={title} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"  disabled/>\r\n// //                 </div>\r\n// //                 <div className=\"mb-3\">\r\n// //                   <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Class</label>\r\n// //                   <input type=\"text\"  name='class'className=\"form-control\" value={classs} disabledid=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n// //                 </div>\r\n// //                 <div className=\"mb-3\">\r\n// //                   <label htmlFor=\"exampleInputEmail1\"className=\"form-control\" >Questions <input type=\"text\"  name='questions'className=\"form-control\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" /></label>\r\n// //                   <input type=\"text\"  name='questions'className=\"form-control\"value={question}  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                 \r\n// //                 </div>\r\n              \r\n                \r\n                \r\n// //                 </form>\r\n// //         </>\r\n// //     )\r\n// // }\r\n// // export  default ExamTest\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { useLocation } from \"react-router-dom\";\r\n// import NavBar from \"./Navbar\";\r\n\r\n// function ExamTest() {\r\n//   const location = useLocation();\r\n//   const [examData, setExamData] = useState([]);\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [classs, setClasss] = useState(\"\");\r\n//   const [questions, setQuestions] = useState([]);\r\n//   const [answers, setAnswers] = useState(Array.from({ length: 10 }, () => \"\")); // Assuming a maximum of 10 questions\r\n\r\n//   // useEffect(() => {\r\n//   //   // Fetch exam data from the backend\r\n//   //   fetch(`http://localhost:4002/api/examview/`)\r\n//   //     .then((response) => response.json())\r\n//   //     .then((data) => {\r\n//   //       setExamData(data);\r\n//   //       console.log()\r\n//   //     })\r\n//   //     .catch((error) => console.error(\"Error fetching exam data:\", error));\r\n//   // }, []);\r\n\r\n//   useEffect(() => {\r\n//     let params = {\r\n//       id: location.state.examId,\r\n//     };\r\n\r\n//     fetch(\"http://localhost:4002/examtest\", {\r\n//       method: \"post\",\r\n//       headers: {\r\n//         Accept: \"application/json\",\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//       body: JSON.stringify(params),\r\n//     })\r\n\r\n//       .then((res) => res.json())\r\n//       .then((result) => {\r\n//         setTitle(result.title);\r\n//         setClasss(result.class);\r\n//         setQuestions(result.questions);\r\n//         console.log(result)\r\n//       });\r\n//   }, [location.state.examId]);\r\n\r\n//   const handleAnswerChange = (index, value) => {\r\n//     const newAnswers = [...answers];\r\n//     newAnswers[index] = value;\r\n//     setAnswers(newAnswers);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <NavBar />\r\n//       <form action=\"\" method=\"post\">\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"title\" className=\"form-label\">\r\n//             Title\r\n//           </label>\r\n//           <input type=\"text\" name=\"title\" className=\"form-control\" value={title} disabled />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"class\" className=\"form-label\">\r\n//             Class\r\n//           </label>\r\n//           <input type=\"text\" name=\"class\" className=\"form-control\" value={classs} disabled />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label className=\"form-label\">Questions</label>\r\n//           {questions.map((question, index) => (\r\n//             <div key={index} className=\"mb-3\">\r\n//               <label htmlFor={`question${index + 1}`} className=\"form-label\">\r\n//                 {`Question ${index + 1}`}\r\n//               </label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name={`question${index + 1}`}\r\n//                 className=\"form-control\"\r\n//                 value={question}\r\n//                 disabled\r\n//               />\r\n//               <label htmlFor={`answer${index + 1}`} className=\"form-label\">\r\n//                 {`Answer ${index + 1}`}\r\n//               </label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name={`answer${index + 1}`}\r\n//                 className=\"form-control\"\r\n//                 value={answers[index]}\r\n//                 onChange={(e) => handleAnswerChange(index, e.target.value)}\r\n//               />\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//         <button  className=\"btn btn-danger m-2\" type=\"submit\">submit</button>\r\n//       </form>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default ExamTest;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport NavBar from \"./Navbar\";\r\n\r\nfunction ExamTest() {\r\n  const location = useLocation();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [classs, setClasss] = useState(\"\");\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState(Array.from({ length: 10 }, () => \"\"));\r\n  const [remainingTime, setRemainingTime] = useState(60 * 60); // Initial time in seconds, e.g., 1 hour\r\n\r\n  useEffect(() => {\r\n    let params = {\r\n      id: location.state.examId,\r\n    };\r\n\r\n    fetch(\"http://localhost:4002/examtest\", {\r\n      method: \"post\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(params),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setTitle(result.title);\r\n        setClasss(result.class);\r\n        setQuestions(result.questions);\r\n        console\r\n      });\r\n  }, [location.state.examId]);\r\n\r\n  useEffect(() => {\r\n    const timerInterval = setInterval(() => {\r\n      setRemainingTime((prevTime) => (prevTime > 0 ? prevTime - 1 : 0));\r\n    }, 1000);\r\n\r\n    // Cleanup the interval on component unmount\r\n    return () => clearInterval(timerInterval);\r\n  }, []);\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${String(minutes).padStart(2, \"0\")}:${String(remainingSeconds).padStart(2, \"0\")}`;\r\n  };\r\n\r\n  const handleAnswerChange = (index, value) => {\r\n    const newAnswers = [...answers];\r\n    newAnswers[index] = value;\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div className=\"timer\">Remaining Time: {formatTime(remainingTime)}</div>\r\n      <form action=\"\" method=\"post\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"title\" className=\"form-label\">\r\n            Title\r\n          </label>\r\n          <input type=\"text\" name=\"title\" className=\"form-control\" value={title} disabled />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"class\" className=\"form-label\">\r\n            Class\r\n          </label>\r\n          <input type=\"text\" name=\"class\" className=\"form-control\" value={classs} disabled />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Questions</label>\r\n          {questions.map((question, index) => (\r\n            <div key={index} className=\"mb-3\">\r\n              <label htmlFor={`question${index + 1}`} className=\"form-label\">\r\n                {`Question ${index + 1}`}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name={`question${index + 1}`}\r\n                className=\"form-control\"\r\n                value={question}\r\n                disabled\r\n              />\r\n              <label htmlFor={`answer${index + 1}`} className=\"form-label\">\r\n                {`Answer ${index + 1}`}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name={`answer${index + 1}`}\r\n                className=\"form-control\"\r\n                value={answers[index]}\r\n                onChange={(e) => handleAnswerChange(index, e.target.value)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button className=\"btn btn-danger m-2\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ExamTest;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,SAAS,EAAEC,YAAY,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}