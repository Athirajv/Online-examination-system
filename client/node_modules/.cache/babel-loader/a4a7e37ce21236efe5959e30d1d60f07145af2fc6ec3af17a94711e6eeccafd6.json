{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\OneDrive\\\\Desktop\\\\Examination System\\\\client\\\\src\\\\PreviousDisplay.js\",\n  _s = $RefreshSig$();\n// import React ,{useState,useEffect}from \"react\";\n// function PrevoiusDisplay(){\n//     const [completedExams, setCompletedExams] = useState([]);\n\n//     useEffect(() => {\n\n//       fetch('http://localhost:4002/api/examview/')\n//         .then((res) => res.json())\n//         .then((result) => {\n\n//           const currentDate = new Date();\n\n//           const filteredCompletedExams = result.filter((exam) => {\n//             const examEndDateTime = new Date(`${exam.scheduledDate} ${exam.scheduledendTime}`);\n\n//             return currentDate > examEndDateTime;\n//           });\n\n//           setCompletedExams(filteredCompletedExams);\n//         });\n//     }, []);\n\n//     return(\n//      <>\n//        <h1>Exam</h1>\n\n//        <div className=\"container mt-4\">\n//         <h4 className=\"mb-4 text-center\">Completed Exams</h4>\n//         <table className=\"table table-bordered  table table-hover alert alert-danger\">\n//           <thead>\n//             <tr>\n//               <th>Exam Name</th>\n//               <th>Exam Date</th>\n//               <th>Start Time</th>\n//               <th>End Time</th>\n\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {completedExams.map((exam) => (\n//               <tr key={exam._id}>\n//                 <td>{exam.title}</td>\n//                 <td>{exam.scheduledDate}</td>\n//                 <td>{exam.scheduledstartTime}</td>\n//                 <td>{exam.scheduledendTime}</td>\n//                 {/* <td><button style={{\n//           backgroundColor: '#4CAF50', color: 'white',padding: '8px 16px',borderRadius: '4px',cursor: 'pointer',}}>view</button></td> */}\n\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//         </>\n//     )\n// }\n// export default PrevoiusDisplay;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PreviousDisplay() {\n  _s();\n  const [examDetails, setExamDetails] = useState(null);\n  const {\n    examId\n  } = useParams(); // Use useParams to get the parameter from the route\n\n  useEffect(() => {\n    const fetchExamDetails = async () => {\n      try {\n        const response = await fetch(`http://localhost:4002/api/previousexam/${examId}`);\n        const data = await response.json();\n        setExamDetails(data);\n      } catch (error) {\n        console.error(\"Error fetching exam details:\", error);\n      }\n    };\n    fetchExamDetails();\n  }, [examId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Exam Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), examDetails ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Exam ID: \", examDetails._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Exam Name: \", examDetails.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Exam Date: \", examDetails.scheduledDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Start Time: \", examDetails.scheduledstartTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"End Time: \", examDetails.scheduledendTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), examDetails.answers.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Question: \", question.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Answer: \", question.answer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading exam details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(PreviousDisplay, \"bGfzLhxMXfnTrvaNfNS1CqDBHOs=\", false, function () {\n  return [useParams];\n});\n_c = PreviousDisplay;\nexport default PreviousDisplay;\nvar _c;\n$RefreshReg$(_c, \"PreviousDisplay\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","PreviousDisplay","_s","examDetails","setExamDetails","examId","fetchExamDetails","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_id","title","scheduledDate","scheduledstartTime","scheduledendTime","answers","map","question","text","answer","id","_c","$RefreshReg$"],"sources":["C:/Users/anand/OneDrive/Desktop/Examination System/client/src/PreviousDisplay.js"],"sourcesContent":["// import React ,{useState,useEffect}from \"react\";\r\n// function PrevoiusDisplay(){\r\n//     const [completedExams, setCompletedExams] = useState([]);\r\n\r\n//     useEffect(() => {\r\n    \r\n//       fetch('http://localhost:4002/api/examview/')\r\n//         .then((res) => res.json())\r\n//         .then((result) => {\r\n         \r\n//           const currentDate = new Date();\r\n  \r\n//           const filteredCompletedExams = result.filter((exam) => {\r\n//             const examEndDateTime = new Date(`${exam.scheduledDate} ${exam.scheduledendTime}`);\r\n  \r\n//             return currentDate > examEndDateTime;\r\n//           });\r\n  \r\n//           setCompletedExams(filteredCompletedExams);\r\n//         });\r\n//     }, []);\r\n    \r\n//     return(\r\n//      <>\r\n//        <h1>Exam</h1>\r\n\r\n//        <div className=\"container mt-4\">\r\n//         <h4 className=\"mb-4 text-center\">Completed Exams</h4>\r\n//         <table className=\"table table-bordered  table table-hover alert alert-danger\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th>Exam Name</th>\r\n//               <th>Exam Date</th>\r\n//               <th>Start Time</th>\r\n//               <th>End Time</th>\r\n             \r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {completedExams.map((exam) => (\r\n//               <tr key={exam._id}>\r\n//                 <td>{exam.title}</td>\r\n//                 <td>{exam.scheduledDate}</td>\r\n//                 <td>{exam.scheduledstartTime}</td>\r\n//                 <td>{exam.scheduledendTime}</td>\r\n//                 {/* <td><button style={{\r\n//           backgroundColor: '#4CAF50', color: 'white',padding: '8px 16px',borderRadius: '4px',cursor: 'pointer',}}>view</button></td> */}\r\n          \r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//         </>\r\n//     )\r\n// }\r\n// export default PrevoiusDisplay;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction PreviousDisplay() {\r\n  const [examDetails, setExamDetails] = useState(null);\r\n  const { examId } = useParams();  // Use useParams to get the parameter from the route\r\n\r\n  useEffect(() => {\r\n    const fetchExamDetails = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:4002/api/previousexam/${examId}`);\r\n        const data = await response.json();\r\n        setExamDetails(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching exam details:\", error);\r\n      }\r\n    };\r\n\r\n    fetchExamDetails();\r\n  }, [examId]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Exam Details</h1>\r\n      {examDetails ? (\r\n        <div>\r\n          <p>Exam ID: {examDetails._id}</p>\r\n          <p>Exam Name: {examDetails.title}</p>\r\n          <p>Exam Date: {examDetails.scheduledDate}</p>\r\n          <p>Start Time: {examDetails.scheduledstartTime}</p>\r\n          <p>End Time: {examDetails.scheduledendTime}</p>\r\n          {/* Add logic to display questions and answers */}\r\n          {examDetails.answers.map((question) => (\r\n            <div key={question.id}>\r\n              <p>Question: {question.text}</p>\r\n              <p>Answer: {question.answer}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p>Loading exam details...</p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PreviousDisplay;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}