{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\OneDrive\\\\Desktop\\\\Examination System\\\\client\\\\src\\\\ExamTest.js\",\n  _s = $RefreshSig$();\n// import React,{useState} from \"react\";\n// import NavBar from \"./Navbar\";\n// function ExamTest(){\n//     const [examData, setExamData] = useState([]);\n//     const[title,setTitle]=useState('')\n\n//     return(\n//         <>\n//        <NavBar/>\n//        <form action=\"\" method=\"post\" >\n//                 <div className=\"mb-3\">\n//                   <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Title</label>\n//                   <input type=\"text\"  name='title'className=\"form-control\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n//                 </div>\n//                 <div className=\"mb-3\">\n//                   <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Class</label>\n//                   <input type=\"text\"  name='class'className=\"form-control\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n//                 </div>\n//                 <div className=\"mb-3\">\n//                   <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Questions</label>\n//                   <input type=\"text\"  name='questions'className=\"form-control\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n//                 </div>\n\n//                 </form>\n//         </>\n//     )\n// }\n// export  default ExamTest\n\n// ExamTest.js\nimport React, { useState } from \"react\";\nimport NavBar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExamTest = ({\n  title,\n  questions,\n  onSubmit\n}) => {\n  _s();\n  const [classValue, setClassValue] = useState(\"\");\n  const [userAnswers, setUserAnswers] = useState(Array(questions.lengt).fill(\"\"));\n  const handleAnswerChange = (index, answer) => {\n    setUserAnswers(prevAnswers => {\n      const newAnswers = [...prevAnswers];\n      newAnswers[index] = answer;\n      return newAnswers;\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Additional logic or sending data to backend can be done here\n    onSubmit({\n      title,\n      class: classValue,\n      userAnswers\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleInputEmail1\",\n          className: \"form-label\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          className: \"form-control\",\n          defaultValue: title,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleInputEmail1\",\n          className: \"form-label\",\n          children: \"Class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"class\",\n          className: \"form-control\",\n          value: classValue,\n          onChange: e => setClassValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleInputEmail1\",\n          className: \"form-label\",\n          children: \"Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `question${index + 1}`,\n            className: \"form-label\",\n            children: [\"Question \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: `question${index + 1}`,\n            className: \"form-control\",\n            value: question,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `answer${index + 1}`,\n            className: \"form-label\",\n            children: \"Your Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: `answer${index + 1}`,\n            className: \"form-control\",\n            value: userAnswers[index],\n            onChange: e => handleAnswerChange(index, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ExamTest, \"8H5Vegy1p4V2p15kM3K5ac9qLhg=\");\n_c = ExamTest;\nexport default ExamTest;\nvar _c;\n$RefreshReg$(_c, \"ExamTest\");","map":{"version":3,"names":["React","useState","NavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","ExamTest","title","questions","onSubmit","_s","classValue","setClassValue","userAnswers","setUserAnswers","Array","lengt","fill","handleAnswerChange","index","answer","prevAnswers","newAnswers","handleSubmit","e","preventDefault","class","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","name","defaultValue","readOnly","value","onChange","target","map","question","_c","$RefreshReg$"],"sources":["C:/Users/anand/OneDrive/Desktop/Examination System/client/src/ExamTest.js"],"sourcesContent":["// import React,{useState} from \"react\";\r\n// import NavBar from \"./Navbar\";\r\n// function ExamTest(){\r\n//     const [examData, setExamData] = useState([]);\r\n//     const[title,setTitle]=useState('')\r\n    \r\n//     return(\r\n//         <>\r\n//        <NavBar/>\r\n//        <form action=\"\" method=\"post\" >\r\n//                 <div className=\"mb-3\">\r\n//                   <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Title</label>\r\n//                   <input type=\"text\"  name='title'className=\"form-control\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n//                 </div>\r\n//                 <div className=\"mb-3\">\r\n//                   <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Class</label>\r\n//                   <input type=\"text\"  name='class'className=\"form-control\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n//                 </div>\r\n//                 <div className=\"mb-3\">\r\n//                   <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Questions</label>\r\n//                   <input type=\"text\"  name='questions'className=\"form-control\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n//                 </div>\r\n              \r\n                \r\n                \r\n//                 </form>\r\n//         </>\r\n//     )\r\n// }\r\n// export  default ExamTest\r\n\r\n\r\n// ExamTest.js\r\nimport React, { useState } from \"react\";\r\nimport NavBar from \"./Navbar\";\r\n\r\nconst ExamTest = ({ title, questions, onSubmit }) => {\r\n  const [classValue, setClassValue] = useState(\"\");\r\n  const [userAnswers, setUserAnswers] = useState(Array(questions.lengt).fill(\"\"));\r\n\r\n  const handleAnswerChange = (index, answer) => {\r\n    setUserAnswers((prevAnswers) => {\r\n      const newAnswers = [...prevAnswers];\r\n      newAnswers[index] = answer;\r\n      return newAnswers;\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Additional logic or sending data to backend can be done here\r\n    onSubmit({ title, class: classValue, userAnswers });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\r\n            Title\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            className=\"form-control\"\r\n            defaultValue={title}\r\n            readOnly\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\r\n            Class\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"class\"\r\n            className=\"form-control\"\r\n            value={classValue}\r\n            onChange={(e) => setClassValue(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\r\n            Questions\r\n          </label>\r\n          {questions.map((question, index) => (\r\n            <div key={index} className=\"mb-3\">\r\n              <label htmlFor={`question${index + 1}`} className=\"form-label\">\r\n                Question {index + 1}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name={`question${index + 1}`}\r\n                className=\"form-control\"\r\n                value={question}\r\n                readOnly\r\n              />\r\n              <label htmlFor={`answer${index + 1}`} className=\"form-label\">\r\n                Your Answer\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name={`answer${index + 1}`}\r\n                className=\"form-control\"\r\n                value={userAnswers[index]}\r\n                onChange={(e) => handleAnswerChange(index, e.target.value)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExamTest;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAGA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC,SAAS;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAACe,KAAK,CAACP,SAAS,CAACQ,KAAK,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;EAE/E,MAAMC,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;IAC5CN,cAAc,CAAEO,WAAW,IAAK;MAC9B,MAAMC,UAAU,GAAG,CAAC,GAAGD,WAAW,CAAC;MACnCC,UAAU,CAACH,KAAK,CAAC,GAAGC,MAAM;MAC1B,OAAOE,UAAU;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACAhB,QAAQ,CAAC;MAAEF,KAAK;MAAEmB,KAAK,EAAEf,UAAU;MAAEE;IAAY,CAAC,CAAC;EACrD,CAAC;EAED,oBACEV,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACExB,OAAA,CAACF,MAAM;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV5B,OAAA;MAAMM,QAAQ,EAAEc,YAAa;MAAAI,QAAA,gBAC3BxB,OAAA;QAAK6B,SAAS,EAAC,MAAM;QAAAL,QAAA,gBACnBxB,OAAA;UAAO8B,OAAO,EAAC,oBAAoB;UAACD,SAAS,EAAC,YAAY;UAAAL,QAAA,EAAC;QAE3D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACR5B,OAAA;UACE+B,IAAI,EAAC,MAAM;UACXC,IAAI,EAAC,OAAO;UACZH,SAAS,EAAC,cAAc;UACxBI,YAAY,EAAE7B,KAAM;UACpB8B,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN5B,OAAA;QAAK6B,SAAS,EAAC,MAAM;QAAAL,QAAA,gBACnBxB,OAAA;UAAO8B,OAAO,EAAC,oBAAoB;UAACD,SAAS,EAAC,YAAY;UAAAL,QAAA,EAAC;QAE3D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACR5B,OAAA;UACE+B,IAAI,EAAC,MAAM;UACXC,IAAI,EAAC,OAAO;UACZH,SAAS,EAAC,cAAc;UACxBM,KAAK,EAAE3B,UAAW;UAClB4B,QAAQ,EAAGf,CAAC,IAAKZ,aAAa,CAACY,CAAC,CAACgB,MAAM,CAACF,KAAK;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN5B,OAAA;QAAK6B,SAAS,EAAC,MAAM;QAAAL,QAAA,gBACnBxB,OAAA;UAAO8B,OAAO,EAAC,oBAAoB;UAACD,SAAS,EAAC,YAAY;UAAAL,QAAA,EAAC;QAE3D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACPvB,SAAS,CAACiC,GAAG,CAAC,CAACC,QAAQ,EAAEvB,KAAK,kBAC7BhB,OAAA;UAAiB6B,SAAS,EAAC,MAAM;UAAAL,QAAA,gBAC/BxB,OAAA;YAAO8B,OAAO,EAAG,WAAUd,KAAK,GAAG,CAAE,EAAE;YAACa,SAAS,EAAC,YAAY;YAAAL,QAAA,GAAC,WACpD,EAACR,KAAK,GAAG,CAAC;UAAA;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC,eACR5B,OAAA;YACE+B,IAAI,EAAC,MAAM;YACXC,IAAI,EAAG,WAAUhB,KAAK,GAAG,CAAE,EAAE;YAC7Ba,SAAS,EAAC,cAAc;YACxBM,KAAK,EAAEI,QAAS;YAChBL,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACF5B,OAAA;YAAO8B,OAAO,EAAG,SAAQd,KAAK,GAAG,CAAE,EAAE;YAACa,SAAS,EAAC,YAAY;YAAAL,QAAA,EAAC;UAE7D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR5B,OAAA;YACE+B,IAAI,EAAC,MAAM;YACXC,IAAI,EAAG,SAAQhB,KAAK,GAAG,CAAE,EAAE;YAC3Ba,SAAS,EAAC,cAAc;YACxBM,KAAK,EAAEzB,WAAW,CAACM,KAAK,CAAE;YAC1BoB,QAAQ,EAAGf,CAAC,IAAKN,kBAAkB,CAACC,KAAK,EAAEK,CAAC,CAACgB,MAAM,CAACF,KAAK;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5D,CAAC;QAAA,GApBMZ,KAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAqBV,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN5B,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAACF,SAAS,EAAC,iBAAiB;QAAAL,QAAA,EAAC;MAElD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA,eACP,CAAC;AAEP,CAAC;AAACrB,EAAA,CAjFIJ,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAmFd,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}